// forEach Polyfill
if (window.NodeList && !NodeList.prototype.forEach) {
    NodeList.prototype.forEach = Array.prototype.forEach;
}

// lock scroll
function disableScroll() {
	let pagePosition = window.scrollY;
	document.body.classList.add('scroll-lock');
	document.body.dataset.position = pagePosition;
	document.body.style.top = -pagePosition + 'px';
}

function enableScroll() {
	let pagePosition = parseInt(document.body.dataset.position, 10);
	document.body.style.top = '';
	document.body.classList.remove('scroll-lock');
	window.scroll({ top: pagePosition, left: 0 });
	document.body.removeAttribute('data-position');
}


const clearInputs = (selector) => {
	selector.forEach(item => {
		item.value = '';
	});
	let checkboxes = quizForm.querySelectorAll('.custom-checkbox__input');
	if (checkboxes.length > 0) {
		for (let index = 0; index < checkboxes.length; index++) {
			const checkbox = checkboxes[index];
			checkbox.checked = false;
		}
	}
};

window.noZensmooth = true;

let links = document.querySelectorAll('.scroll');


links.forEach(link => {

	link.addEventListener('click', function(event) {
		event.preventDefault();

		let hash = this.getAttribute('href').replace('#', '');
		let toBlock = document.querySelector('.' + hash);

		zenscroll.to(toBlock);
	});
});

const upElem = document.querySelector('.pageup');

window.addEventListener('scroll', () => {
	let scrolled = window.pageYOffset || document.documentElement.scrollTop;
	if (scrolled > 1300) {
		upElem.classList.add('active');
	} else {
		upElem.classList.remove('active');
	}
});

const tooltipBtn = document.querySelector('.tooltip__btn');
const tooltipText = document.querySelector('.tooltip__txt');
let tooltipOpen = false;
tooltipBtn.addEventListener('touchend', function() {
	tooltipOpen = !tooltipOpen; 
	tooltipText.style.opacity = (tooltipOpen ? '1' : '0');
	tooltipText.style.visibility = (tooltipOpen ? 'visible' : 'hidden');
	tooltipText.style.transform = (tooltipOpen ? 'translateY(0)' : 'translateY(10px)');
});


const btns = document.querySelectorAll('.spoiler__btn');

btns.forEach(btn => {
	btn.addEventListener('click', function(e) {
		const spollersBlock = this.closest('.spoilers');
		const oneSpoller = spollersBlock.hasAttribute('data-one-spoller') ? true : false;
		if (!spollersBlock.querySelectorAll('.slide').length) {
			if (oneSpoller && !this.classList.contains('active')) {
				const spollerActive = spollersBlock.querySelector('.spoiler__btn.active');
				if (spollerActive) {
					spollerActive.classList.remove('active');
					slideUp(spollerActive.nextElementSibling, 500);
				}
			}
			this.classList.toggle('active');
			slideToggle(this.nextElementSibling, 500);
		}
	});
});

// ==================================================================
//SlideToggle
let slideUp = (target, duration = 500) => {
	if (!target.classList.contains('slide')) {
		target.classList.add('slide');
		target.style.transitionProperty = 'height, margin, padding';
		target.style.transitionDuration = duration + 'ms';
		target.style.height = target.offsetHeight + 'px';
		target.offsetHeight;
		target.style.overflow = 'hidden';
		target.style.height = 0;
		target.style.paddingTop = 0;
		target.style.paddingBottom = 0;
		target.style.marginTop = 0;
		target.style.marginBottom = 0;
		window.setTimeout(() => {
			target.hidden = true;
			target.style.removeProperty('height');
			target.style.removeProperty('padding-top');
			target.style.removeProperty('padding-bottom');
			target.style.removeProperty('margin-top');
			target.style.removeProperty('margin-bottom');
			target.style.removeProperty('overflow');
			target.style.removeProperty('transition-duration');
			target.style.removeProperty('transition-property');
			target.classList.remove('slide');
		}, duration);
	}
}
let slideDown = (target, duration = 500) => {
if (!target.classList.contains('slide')) {
	target.classList.add('slide');
	if (target.hidden) {
		target.hidden = false;
	}
	let height = target.offsetHeight;
	target.style.overflow = 'hidden';
	target.style.height = 0;
	target.style.paddingTop = 0;
	target.style.paddingBottom = 0;
	target.style.marginTop = 0;
	target.style.marginBottom = 0;
	target.offsetHeight;
	target.style.transitionProperty = "height, margin, padding";
	target.style.transitionDuration = duration + 'ms';
	target.style.height = height + 'px';
	target.style.removeProperty('padding-top');
	target.style.removeProperty('padding-bottom');
	target.style.removeProperty('margin-top');
	target.style.removeProperty('margin-bottom');
	window.setTimeout(() => {
		target.style.removeProperty('height');
		target.style.removeProperty('overflow');
		target.style.removeProperty('transition-duration');
		target.style.removeProperty('transition-property');
		target.classList.remove('slide');
	}, duration);
}
}
let slideToggle = (target, duration = 500) => {
	if (target.hidden) {
		return slideDown(target, duration);
	} else {
		return slideUp(target, duration);
	}
}
let menuBody = document.querySelector('.menu');
let menuItem = document.querySelectorAll('.menu__link');
let hamburger = document.querySelector('.hamburger');

hamburger.addEventListener('click', () => {    
    hamburger.classList.toggle('active');
    menuBody.classList.toggle('active');

    if (hamburger.classList.contains('active')) {
        hamburger.setAttribute('aria-label', 'закрыть навигацию');
        disableScroll();
    } else {
        hamburger.setAttribute('aria-label', 'открыть навигацию');
        enableScroll();
    }

    setTimeout(() => {
        menuBody.focus();
    }, 600);
});

menuItem.forEach(item => {
    item.addEventListener('click', (e) => {
        e.preventDefault();
        if (hamburger.classList.contains('active')) {
            hamburger.classList.remove('active');
            menuBody.classList.remove('active');
            hamburger.setAttribute('aria-label', 'открыть навигацию');
            enableScroll();
        }
    })
})

let filter = document.querySelector('.catalog__filters');
let filterBtn = document.querySelector('.catalog__btn');
let filterBurger = document.querySelector('.catalog-hamburger');

filterBurger.addEventListener('click', () => {    
    filterBurger.classList.toggle('active');
    filter.classList.toggle('active');
    if (filterBurger.classList.contains('active')) {
        filterBurger.setAttribute('aria-label', 'закрыть фильтр');
    } else {
        filterBurger.setAttribute('aria-label', 'открыть фильтр');
    }
    setTimeout(() => {
        filter.focus();
    }, 600);
});

filterBtn.addEventListener('click', (e) => {
    e.preventDefault();
    if (filterBurger.classList.contains('active')) {
        filterBurger.classList.remove('active');
        filter.classList.remove('active');
        filterBurger.setAttribute('aria-label', 'открыть фильтр'); 
    }
})

const checkBox = document.querySelectorAll('.catalog-checkbox__label, .custom-checkbox__text');

checkBox.forEach(item => {
	item.addEventListener('keydown', (e) => {
		if (e.code === 'Enter' || e.code === 'NumpadEnter' || e.code === 'Space') {
			let check = e.target.previousElementSibling;
			if (check.type == 'radio') {
				if (check.checked === false) {
					check.checked = true;
				} 
			} else if (check.type == 'checkbox') {
				if (check.checked === false) {
					check.checked = true;
				} else {
					check.checked = false;
				}
			}

		}
	});
});
const forms = document.querySelectorAll('form');

if (forms.length > 0) {
	forms.forEach(item => {
		item.addEventListener('submit', (e) => {
			e.preventDefault();
			let form = e.target;	
			let inputs = form.querySelectorAll('input');
			// let fileName = target.querySelector('.file__name'); // если есть загрузка файла (в атрибут добавить file)
			let valid = validInput(form);
			if (valid === 0 && validCheck(form)) {
				formRemoveError(form);

				//* ======== Сообщение об отправке ============
				let textMessage = form.querySelector('.form-message');
				if (textMessage) {
					textMessage.textContent = 'Загрузка...';
					textMessage.classList.add('active');
				}

				//* Запись названия чекбокса в value инпута чекбокса (если есть чекбоксы)
				// inputs.forEach(input => {
				// 	if (input.type == 'checkbox' || input.type == 'radio') {
				// 		input.value = input.nextElementSibling.textContent;
				// 	}
				// });

				//*========= FormData =========================
				const formData = new FormData(item);
				// formData.append('image', formImage.files[0]);
				if (form.classList.contains('modal-cart-form')) {
					document.querySelectorAll('.modal-cart-product').forEach((el, idx) => {
						let title = el.querySelector('.modal-cart-product__title').textContent;
						let price = el.querySelector('.modal-cart-product__price').textContent;
						formData.append(`product-${idx + 1}`, `${title}, ${price}`);
					});
			  
					formData.append(`summ`, `${document.querySelector('.modal-cart-order__summ span').textContent}`);
				}

				//* ===== Проверка формы =====
				// for(var pair of formData.entries()) {
				// 	console.log(pair[0]+ ', '+ pair[1]);
				// }

				//*========= Отправка данных ===============
				const postData = async (url, data) => {
					let response = await fetch(url, {
						method: "POST",
						body: data
					});	
					if (response.ok) {

						// let result = await response.json(); // json() - для вывода сообщения;
						// alert(result.message);

						let result = await response.text(); // text() - для проверки на сервере, подключить server.php)
						// console.log(result); // это для проверки на сервере

						if (textMessage) {
							textMessage.textContent = 'Спасибо, скоро мы с вами свяжимся!';
							textMessage.classList.add('active');
						}
						// clearInputs(inputs);
						if (item.classList.contains('modal-cart-form')) {
							allDel();
						}
						form.reset();
						setTimeout(() => {
							if (textMessage) {
								textMessage.classList.remove('active');
							}
						}, 5000);
					} else {
						// alert("Ошибка");
						if (textMessage) {
							textMessage.textContent = 'Что-то пошло не так...';
							textMessage.classList.add('active');
						}
						setTimeout(() => {
							// form.reset();
							if (textMessage) {
								textMessage.classList.remove('active');
							}
						}, 5000);
					}
				};
				// postData('../sendmail.php', formData);
				postData('../server.php', formData) //! убрать (это для проверки на сервере)
			}
		});
	});
}
let flag = 0;
let lazyScript = document.querySelectorAll('script[data-src]');

window.addEventListener('scroll', function() {
	let scrollY = window.scrollY;
	let mapOffset = document.querySelector("#map").offsetTop;

	if ((scrollY >= mapOffset - 500) && (flag == 0)) {
		flag = 1;
		// Как только API Яндекс.Карт загрузились, сразу формируем карту и помещаем в блок с идентификатором
		loadScript();
	}
});

// Функция загрузки API Яндекс.Карт
function loadScript(){
	let script = document.createElement("script");

	if (script.readyState) {  // IE
		script.onreadystatechange = function(){
			if (script.readyState == "loaded" || script.readyState == "complete") {
				script.onreadystatechange = null;
				ymaps.ready(init);
			}
		};
	} else {  // Другие браузеры
		script.onload = function(){
			ymaps.ready(init);
		};
	}

	script.src = "https://api-maps.yandex.ru/2.1/?lang=ru_RU";
	document.getElementsByTagName("head")[0].appendChild(script);
}

//Функция создания карты сайта и затем вставки ее в блок с идентификатором map;
function init(){
	const myMap = new ymaps.Map("map", {
		center: [59.830481, 30.142197],
		zoom: 10,
		controls: []

	});
	let myPlacemark  = new ymaps.Placemark([59.830481, 30.142197], {}, {
		iconLayout: 'default#image',
		iconImageHref: 'img/placemark.png',
		iconImageSize: [25, 34],
		iconImageOffset: [-19, -44]
	});			
	myMap.geoObjects.add(myPlacemark);
	myMap.behaviors.disable(['scrollZoom']);
}
let setCursorPosition = (pos, elem) => {
    elem.focus();
    if (elem.setSelectionRange) {
        elem.setSelectionRange(pos, pos);
    } else if (elem.createTextRange) {
        let range = elem.createTextRange();

        range.collapse(true);
        range.moveEnd('character', pos);
        range.moveStart('character', pos);
        range.select();
    }
};
function createMask(event) {
    let matrix = '+7 (___) ___ __ __',
        i = 0,
        def = matrix.replace(/\D/g, ''),
        val = this.value.replace(/\D/g, '');
    if (def.length >= val.length) {
        val = def;
    }
    this.value = matrix.replace(/./g, function(a) {
        return /[_\d]/.test(a) && i < val.length ? val.charAt(i++) : i >= val.length ? '' : a;
    });
    if (event.type ==='blur') {
        if (this.value.length == 2 || this.value.length < matrix.length) {
            this.value = '';
        }
    } else if (event.type ==='keyup' || event.type ==='mouseup') {
        let cur = this.selectionStart;
        if (cur == '0') {
            setCursorPosition(this.value.length, this);
        }
    } else {
        setCursorPosition(this.value.length, this);        
    }
}
let tel = document.querySelectorAll('.tel');
tel.forEach(input => {
    input.addEventListener('input', createMask);
    input.addEventListener('focus', createMask);
    input.addEventListener('blur', createMask);
    input.addEventListener('keyup', createMask);
    input.addEventListener('mouseup', createMask);
});
const cartBtn = document.querySelector('.cart');
const miniCart = document.querySelector('.mini-cart');
// const miniCartItem = document.querySelectorAll('.mini-cart__item');

cartBtn.addEventListener('click', () => {
	miniCart.classList.toggle('mini-cart--open');
});

document.addEventListener('click', (e) => {
	if (!e.target.classList.contains('mini-cart') && !e.target.closest('.mini-cart') && !e.target.classList.contains('cart') && !e.target.classList.contains('mini-cart__delete')
	|| e.target.classList.contains('mini-cart__btn')) {
		miniCart.classList.remove('mini-cart--open');
	}
});
//TODO Добавить классы:
//* data-btn="modal-name" - добавить кнопкам открытия модального окна (modal-name - имя окна, которое должно открыться)
//* data-modal - добавить всем модальным окнам (modal-name) (если их несколько)
//* block-fix - добавить класс для блоков с position: absolute или fixed (добавится padding)
//* small-fix - добавить класс для маленьких блоков с position: absolute или fixed (добавится margin)
//* data-inside - добавить кнопкам внутри модального окна, которые открывают следующее модальное окно (что бы сохранить фокус на кнопке вне окна)

//? эти параметры указывать, если они разные для разных окон - если одинаковые - меняем speedTime и modalAnimation
//* data-speed="300" - добавить время выполнения, по умолчанию 500 (ставится в соответствии с $transition-time)
//* data-animation="fadeInUp"  - добавить анимацию при открытии модального окна (контента внутри оболочки), по умолчанию 'fade'

const modal = document.querySelector('.modal-overlay');
const modalBtn = document.querySelectorAll('[data-btn]');
const openWindows = document.querySelectorAll('[data-modal]');
const fixBlocks = document.querySelectorAll('.block-fix ');
const fixSmall = document.querySelectorAll('.small-fix');
const modalScroll = window.innerWidth - document.body.offsetWidth;
const focusElements = [
	'a[href]',
	'input',
	'select',
	'textarea',
	'button',
	'iframe',
	'[contenteditable]',
	'[tabindex]:not([tabindex^="-"])'
];
let modalContent;
let lastFocus = false;
let speedTime = 500;
// let modalAnimation = 'fade';
if (modal) {
	modalBtn.forEach(function(item) {
		item.addEventListener('click', function(e) {
			let target = e.currentTarget;
			if (target) {
				e.preventDefault();
				let modalName = target.dataset.btn;
				modalContent = document.querySelector(`.${modalName}`);
				// скорость и анимация - если добавлены в аргумент data
				let speed = target.dataset.speed;
				// let animation = target.dataset.animation;
				speedTime = speed ? parseInt(speed) : 500;
				// modalAnimation = animation ? animation : 'fade';
				openModal();

				// todo если есть кнопки внутри модального окна, которые открывают следующее модальное окно (data-inside), передаем аргумент target
				// openModal(target);
			}
		});
	});

	document.addEventListener('click', (e) => {
		if (e.target.classList.contains('modal-overlay') && e.target.classList.contains("is-open")) {
			closeModal();			
		}

		if (e.target.classList.contains('modal__close') && e.target.closest('.modal-open')) {
			closeModal();			
		}
	});
	

	document.addEventListener('keydown', (e) => {
		if (e.code === 'Escape' && modal.classList.contains("is-open")) {
			closeModal();
		}

		if (e.code === 'Tab' && modal.classList.contains("is-open")) {
			focusCatch(e);
		}
	});
}

function openModal(func) {
	lastFocus = document.activeElement;
	// todo если есть кнопки внутри модального окна, которые открывают следующее модальное окно (data-inside), lastFocus получаем так (обычный убрать):
	// if (!btn.closest(`[data-inside]`)) {
	// 	lastFocus = document.activeElement;
	// }

	openWindows.forEach(item => {
		item.classList.remove('modal-open');
		item.setAttribute('aria-hidden', true);
		// item.classList.remove('animate-open');
		// item.classList.remove(modalAnimation);
	});

	if (!modal.classList.contains('is-open')){
		disableScroll();
	}

	if (func && modalContent.classList.contains('modal-prod')) {
		func();
	}

	modal.classList.add('is-open');
	modal.setAttribute('tabindex', '0');

	document.body.style.paddingRight = `${modalScroll}px`;
	if (fixBlocks.length > 0) {
		fixBlocks.forEach(item => {
			item.style.paddingRight = `${modalScroll}px`;
		})
	}
	if (fixSmall.length > 0) {
		fixSmall.forEach(item => {
			item.style.marginRight = `${modalScroll}px`;
		})
	}

	modalContent.classList.add('modal-open');
	modalContent.setAttribute('aria-hidden', false);
	// modalContent.classList.add(modalAnimation);

	setTimeout(() => {
		// modalContent.classList.add('animate-open');
		focusTrap();
	}, speedTime);
}

function closeModal() {
	openWindows.forEach(item => {
		item.classList.remove('modal-open');
		item.setAttribute('aria-hidden', true);
		// item.classList.remove('animate-open');
		// item.classList.remove(modalAnimation);
	});

	enableScroll();

	document.body.style.paddingRight = `0px`;
	if (fixBlocks.length > 0) {
		fixBlocks.forEach(item => {
			item.style.paddingRight = `0px`;
		})
	}
	if (fixSmall.length > 0) {
		fixSmall.forEach(item => {
			item.style.marginRight = `0px`;
		})
	}

	modal.classList.remove('is-open');
	modal.setAttribute('tabindex', '-1');

	focusTrap();
}

function focusTrap() {
	// const nodes = this.modalContainer.querySelectorAll(this._focusElements); //* для фокуса на первом элементе окна
	if (modal.classList.contains("is-open")) {
		modal.focus();
		// if (nodes.length) nodes[0].focus(); //* для фокуса на первом элементе окна
	} else {
		lastFocus.focus();	
	}
}

function focusCatch(e) {
	const focusable = modalContent.querySelectorAll(focusElements);
	const focusArray = Array.prototype.slice.call(focusable);
	const focusedIndex = focusArray.indexOf(document.activeElement);

	if (e.shiftKey && focusedIndex === 0) {
		focusArray[focusArray.length - 1].focus();
		e.preventDefault();
	}

	if (!e.shiftKey && focusedIndex === focusArray.length - 1) {
		focusArray[0].focus();
		e.preventDefault();
	}
}
const modalSlider = function() {
	const minSlider = new Swiper('.slider-min', {
		grabCursor: true,
		slidesPerView: 6,
		initialSlide: 0,
		spaceBetween: 20,
		freeMode: true,
	});
	
	const mainSlider = new Swiper('.slider-main', {
		grabCursor: true,
		spaceBetween: 20,
		slidesPerView: 1,
		initialSlide: 0,
		simulateTouch: false,
		effect: 'fade',
		fadeEffect: {
		  crossFade: true
		},
		thumbs: {
			swiper: minSlider,
		}
	});
};
const catalogProducts = document.querySelector('.catalog__wrap');
if (catalogProducts) {
	catalogProducts.addEventListener('click', function(e) {
		if (e.target.classList.contains('modal-btn')) {
			e.preventDefault();
			modalContent = document.querySelector('.modal-prod');
			openModal(loadModalData);
		}
	});
	
	const loadModalData = async function() {
		modalSlider();
	};

	//* делаем видимыми кнопки товара при фокусе (по умолчанию они скрыты)
	const productsBtns = document.querySelectorAll('.catalog-item__btn');
	productsBtns.forEach(el => {
		el.addEventListener('focus', (e) => {
			let parent = e.currentTarget.closest('.catalog-item__btns');
			parent.classList.add('catalog-item__btns--focus');
		}, true);

		el.addEventListener('blur', (e) => {
			let parent = e.currentTarget.closest('.catalog-item__btns');
			parent.classList.remove('catalog-item__btns--focus');
		}, true);
	});

	//* по тачу появляются кнопки товара
	let isOpen = false;
	catalogProducts.addEventListener('touchend', function(e) {
		if (e.target.closest('.catalog-item__img')) {
			let btns = e.target.closest('.catalog-item__btns');
			let btn = btns.querySelectorAll('.catalog-item__btn');
			if (!isOpen) {
				btns.classList.add('catalog-item__btns--touch');
				setTimeout(() => {
					btn.forEach(el => {
						el.style.pointerEvents = 'auto';
					});
				}, 100);
				isOpen = true;
			} else if (isOpen && !e.target.classList.contains('catalog-item__btn') && !e.target.classList.contains('add-to-cart-btn')) {
				btns.classList.remove('catalog-item__btns--touch');
				setTimeout(() => {
					btn.forEach(el => {
						el.style.pointerEvents = 'none';
					});
				}, 100);
				isOpen = false;
			}
		}
	});
}

// работа мини-корзины
const miniCartList = document.querySelector('.mini-cart__list');
const fullPrice = document.querySelector('.mini-cart__summ');
const cartCount = document.querySelector('.cart__count');
let price = 0;

// функция вставляет пробел между разрядами
const normalPrice = (str) => {
	return String(str).replace(/(\d)(?=(\d\d\d)+([^\d]|$))/g, '$1 ');
};
// функция удаляет пробел между разрядами
const priceWithoutSpaces = (str) => {
	return str.replace(/\s/g, '');
};

const createCart = function () {
	miniCartList.insertAdjacentHTML('afterbegin', `
		<li class="mini-cart__item">
			<div class="mini-cart__image">
				<img src="img/image.jpg" alt="изображение" width="100" height="100">
			</div>
			<div class="mini-cart__content">
				<h3 class="mini-cart__title">Кроссовки Nike Air Force 1 '07 QS</h3>
				<span class="mini-cart__price">11 000 р</span>
			</div>
			<button class="mini-cart__delete btn-reset"></button>
		</li>
	`);

	price += 11000;
	fullPrice.textContent = `${normalPrice(price)} р`;

	// получаем количество товара, добавляем его в показаель количества и делаем активным кружочек с количеством
	let num = document.querySelectorAll('.mini-cart__item').length;
	if (num > 0) {
		cartCount.classList.add('cart__count--active');
	}
	cartCount.textContent = num;
	// делаем значек корзины доступным для клика
	document.querySelector('.cart').removeAttribute('disabled');
}

// при нажатии на кнопку "добавить в корзину" - товар добавляется в корзину
catalogProducts.addEventListener('click', (e) => {
	if (e.target.classList.contains('add-to-cart-btn')) {
		createCart();
	}
});

// при нажатии на кнопку "заказать" в модальном окне корзины - товар добавляется в корзину
const modalOrder = document.querySelector('.modal-info__order');
modalOrder.addEventListener('click', (e) => {
	createCart();
});

// кнопки размера в модальном окне
const modalSize = document.querySelectorAll('.modal-info__size');
modalSize.forEach(function(el) {
	el.addEventListener('click', function(e) {
		let self = e.currentTarget;
		el.style.backgroundColor = '#b2b5bb';
		modalSize.forEach(btn => {
			if (btn !== self) {
				btn.style.backgroundColor = 'transparent';
			}
		});
	});
});

miniCartList.addEventListener('click', (e) => {
	// при клике на кнопку "удалить товар из корзины" удаляем единицу товара, меняем сумму и количество
	if (e.target.classList.contains('mini-cart__delete')) {
		const self = e.target;
		const parent = self.closest('.mini-cart__item');
		parent.remove();
		price -= 11000;
		fullPrice.textContent = `${normalPrice(price)} р`;
		let num = document.querySelectorAll('.mini-cart__list .mini-cart__item').length;
		if (num == 0) {
			cartCount.classList.remove('cart__count--active');
			miniCart.classList.remove('mini-cart--open');
			document.querySelector('.cart').setAttribute("disabled", "disabled");
		}
		cartCount.textContent = num;

	} else if (e.target.closest('.mini-cart__item')) {
		// выделяем товары в корзине при клике на них
		const parent = e.target.closest('.mini-cart__item');
		const cartItems = document.querySelectorAll('.mini-cart__list .mini-cart__item');
		cartItems.forEach(btn => {
			if (!btn.contains(e.target)) {
				btn.classList.remove('mini-cart__item--active');
			}
		});	
		parent.classList.add('mini-cart__item--active');
	}
});

//* работа корзины в модальном окне
const openOrderModal = document.querySelector('.mini-cart__btn');
const orderModalList = document.querySelector('.modal-cart-order__list');
const orderModalQuantity = document.querySelector('.modal-cart-order__quantity span');
const orderModalSumm = document.querySelector('.modal-cart-order__summ span');
const orderModalShow = document.querySelector('.modal-cart-order__show');

// при клике на кнопку "перейти в корзину" модальное окно корзины заполняется товаром из мини-корзины
openOrderModal.addEventListener('click', () => {
	const productsMiniCart = document.querySelectorAll('.mini-cart__item');
	const productsQuantity = productsMiniCart.length;
	orderModalList.innerHTML = '';
	productsMiniCart.forEach(function(el) {
		modalCartLoad();
	});

	document.querySelector('.modal-cart-form__submit').removeAttribute("disabled", "disabled");

	orderModalQuantity.textContent = `${productsQuantity} шт`;
	orderModalSumm.textContent = fullPrice.textContent;
});

// функция заполнения модального окна товароми из мини-корзины
const modalCartLoad = () => {
	orderModalList.insertAdjacentHTML('afterbegin', `
		<li class="modal-cart-product">
			<div class="modal-cart-product__image">
				<img src="img/image.jpg" alt="изображение" width="80" height="80">
			</div>
			<div class="modal-cart-product__content">
				<h3 class="modal-cart-product__title">Кроссовки Nike Air Force 1 '07 QS</h3>
				<span class="modal-cart-product__price">11 000 p</span>
			</div>
			<button class="modal-cart-product__delete btn-reset">Удалить</button>
		</li>
	`);
};

// удаление товаров из окна корзины
orderModalList.addEventListener('click', (e) => {
	if (e.target.classList.contains('modal-cart-product__delete')) {
		const self = e.target;
		const parent = self.closest('.modal-cart-product');
		// parent.remove();

		const productsMiniCart = document.querySelectorAll('.mini-cart__item');
		for (let i = 0; i < productsMiniCart.length; i++) {
			let item = productsMiniCart[i];
			if (i == 0) {
				item.remove();
			}
		}
		
		parent.style.opacity = '0';
		setTimeout(() => {
			parent.style.marginBottom = '0px';
			parent.style.maxHeight = '0px';
		}, 100);

		// изменяем общую стоимость товаров в окне и в мини-корзине
		price -= 11000;
		setTimeout(() => {
			parent.remove();
			let num = document.querySelectorAll('.modal-cart-product').length;
			if (num == 0) {
				cartCount.classList.remove('cart__count--active');
				document.querySelector('.cart').setAttribute("disabled", "disabled");
				document.querySelector('.modal-cart-form__submit').setAttribute("disabled", "disabled");
				orderModalShow.classList.remove('active');
			}
			cartCount.textContent = num; 
			orderModalSumm.textContent = `${normalPrice(price)} р`;
			orderModalQuantity.textContent = `${num} шт`;
			fullPrice.textContent = `${normalPrice(price)} р`;
		}, 300);


	}
});

// очищение корзины после нажатия кнопки "заказать" (используется в форме заказа)
function allDel() {
	orderModalShow.classList.remove('active');
	orderModalList.hidden = true;

	orderModalSumm.textContent = '0 р';
	orderModalQuantity.textContent = '0 шт';
	document.querySelector('.modal-cart-form__submit').setAttribute("disabled", "disabled");

	let products =  document.querySelectorAll('.modal-cart-product');
	products.forEach(function(el) {
		el.remove();
	});

	cartCount.classList.remove('cart__count--active');
	cartCount.textContent = '0';
	document.querySelector('.cart').setAttribute("disabled", "disabled"); 

	let miniCartItems = document.querySelectorAll('.mini-cart__item');
	miniCartItems.forEach(function(el) {
		el.remove();
	});
	fullPrice.textContent = '0 р';
	price =  0;
}

const quizForm = document.querySelector('.quiz-form');
const quizInputs = quizForm.querySelectorAll('input');
const quizBlocks = quizForm.querySelectorAll('.quiz-block');

let textareaText = null;
let quizReply  = {};
let blockIndex = 0;

// функция показа только первого блока квиза
showBlocks(blockIndex);

function showBlocks() {
	quizBlocks.forEach((item) => item.style.display = 'none');
	quizBlocks[blockIndex].style.display = 'block';
	quizBlocks[blockIndex].classList.add('fadeIn');
}

// запись названия чекбокса в value инпута чекбокса
quizInputs.forEach(input => {
	if (input.type == 'checkbox' || input.type == 'radio') {
		input.value = input.nextElementSibling.textContent;
	}
});

quizForm.addEventListener('click', (e) => {
	let target = e.target;
	let block = target.closest('.quiz-block');
	let nextBtn = quizForm.querySelectorAll('[data-next]');
	nextBtn.forEach(btn => {
		if (target == btn) {
			e.preventDefault();
			addToSend(block, quizReply);
			nextQuestion(block);
		}
	});
	if (target == document.querySelector('[data-send]')) {
		e.preventDefault();
		addToSend(block, quizReply);
		send(block);
	}
});

function nextQuestion(form) {
	let valid = validInput(form);
	if (valid === 0 && validCheck(form)) {
		showBlocks(blockIndex += 1);
	}
}

function send(form) {
	let valid = validInput(form);
	if (valid === 0 && validCheck(form)) {
		formRemoveError(quizForm);

		//* ======== Сообщение об отправке ============
		let ok = form.querySelector('.quiz-send__ok');
		let textMessage = form.querySelector('.quiz-message');
		if (textMessage) {
			textMessage.textContent = 'Загрузка...';
			textMessage.classList.add('active');
		}

		//*========= FormData ===============
		const quizFormData = new FormData();
		for (let key in quizReply) {
			quizFormData.append(key, quizReply[key]);
		}
		// formData.append('image', formImage.files[0]);
		//* Проверка FormData
		// for(var pair of quizFormData.entries()) {
		// 	console.log(pair[0]+ ': '+ pair[1]);
		// }

		//*========= Отправка данных ===============
		const quizData = async (url, data) => {
			let response = await fetch(url, {
				method: "POST",
				body: data
			});	
			if (response.ok) {

				// let result = await response.json(); // json() - для вывода сообщения;
				// alert(result.message);

				let result = await response.text(); // text() - для проверки на сервере, подключить server.php)
				// console.log(result); // это для проверки на сервере

				// if (textMessage) {
				// 	textMessage.textContent = 'Ok!';
				// 	textMessage.classList.add('active');
				// }
				ok.classList.add('active');
				clearInputs(quizInputs);
				setTimeout(() => {
					if (textMessage) {
						textMessage.classList.remove('active');
					}
					ok.classList.remove('active');
				}, 5000);
			} else {
				alert("Ошибка HTTP: " + response.status);
				if (textMessage) {
					textMessage.textContent = 'Что-то пошло не так...';
					textMessage.classList.add('active');
				}
				setTimeout(() => {
					if (textMessage) {
						textMessage.classList.remove('active');
					}
				}, 5000);
			}
		};
		// quizData('../sendmail.php', quizFormData);
		quizData('../server.php', quizFormData) //! убрать (это для проверки на сервере)

	}
}

function addToSend(form, obj) {
	let valueString = '';
	let inputs = form.querySelectorAll('input');
	let textarea = form.querySelectorAll('textarea');
	if (inputs.length > 0) {
		for (let i = 0; i < inputs.length; i++) {
			let field = inputs[i];
			if (field.type != 'checkbox' && field.type != 'radio' && field.value) {
				obj[field.name] = field.value;
			} else if (field.type == 'radio' && field.checked) {
				obj[field.name] = field.value;
			} else if (field.type == 'checkbox' && field.checked) {
				valueString += field.value + ',';		
				obj[field.name] = valueString;
			}
		}
	} else if (textarea.length > 0) {
		for (let i = 0; i < textarea.length; i++) {
			let text = textarea[i];
			if (text.value) {
				obj[text.name] = text.value;	
			}
		}
	}
}
const rangeSlider = document.getElementById('range-slider');

if (rangeSlider) {
	noUiSlider.create(rangeSlider, {
	start: [500, 999999],
		connect: true,
		step: 1,
	range: {
			'min': [500],
			'max': [999999]
	}
	});

	const input0 = document.getElementById('input-0');
	const input1 = document.getElementById('input-1');
	const inputs = [input0, input1];

	rangeSlider.noUiSlider.on('update', function(values, handle){
		inputs[handle].value = Math.round(values[handle]);
	});

	const setRangeSlider = (i, value) => {
		let arr = [null, null];
		arr[i] = value;
		rangeSlider.noUiSlider.set(arr);
	};

	inputs.forEach((el, index) => {
		el.addEventListener('change', (e) => {
			setRangeSlider(index, e.currentTarget.value);
		});
	});
}
let td = document.querySelectorAll('.catalog-sizes td');

td.forEach(item => {
	item.addEventListener('click', (e) => {
		let self = e.currentTarget;
		item.style.backgroundColor = '#dbbba9';
		td.forEach(btn => {
			if (btn !== self) {
				btn.style.backgroundColor = 'transparent';
			}
		});
	});
});
//* Валидация формы (если чекбоксы и инпуты в одной форме)
function validCheck(form) {
	let elements = form.querySelectorAll('input');
	let isValid = false;
	if (elements.length > 0) {
		for (let index = 0; index < elements.length; index++) {
			let input = elements[index];
			if (!input.classList.contains('not-valid') && input.getAttribute("type") === "checkbox" || input.getAttribute("type") === "radio") {
					if (input.checked) {
						isValid = true;
					} else {
						formAddError(input);
					}
			} else {isValid = true;}
		}
	} else {isValid = true;}

	return isValid;
}
function validInput(form) {
	let elements = form.querySelectorAll('input');
	let error = 0;
	if (elements.length > 0) {
		for (let index = 0; index < elements.length; index++) {
			let input = elements[index];
			let placeholder = input.getAttribute('placeholder');
			if (!input.classList.contains('not-valid')) {
				if (input.classList.contains('email')) {
					if (emailTest(input) || input.value == placeholder) {
						formAddError(input);
						error++;
					}
				} else {
					if (input.value == '' || input.value == placeholder) {
						formAddError(input);
						error++;
					}
				}
			}
		}
	}

	return error;
}

function formAddError(item) {
	item.parentElement.classList.add('error');
	item.classList.add('error');

	if (item.closest('.quiz-form')) {
		let quizError = item.closest('.quiz-block').querySelector('.quiz-message');
		if (quizError) {
			quizError.classList.add('active');
		}
	} else {
		let formError = item.parentElement.querySelector('.form-message');
		if (formError) {
			formError.classList.add('active');
		}
	}
}

function formRemoveError(form) {
	let inputs = form.querySelectorAll('input, textarea');
	if (inputs.length > 0) {
		for (let index = 0; index < inputs.length; index++) {
			let input = inputs[index];
			if (!input.classList.contains('not-valid')) {
				input.parentElement.classList.remove('error');
				input.classList.remove('error');
			}
		}
	}
	
	let formError = form.querySelectorAll('.form-message');
	if (formError.length > 0) {
		for (let index = 0; index < formError.length; index++) {
			const error = formError[index];
			error.classList.remove('active');
		}
	}
}

function emailTest(selector) {
	return !/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,8})+$/.test(selector.value);
}

const textInputs = document.querySelectorAll('.check');   
textInputs.forEach(input => {
	input.addEventListener('keypress', function(e) {
		if (e.key.match(/[^а-яё 0-9]/ig)) {
			e.preventDefault();
		}
	});
	input.addEventListener('keyup', function() {
		this.value=this.value.replace(/[^\а-яё 0-9]/ig,"");
	});
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiLCJhY2NvcmRpb24uanMiLCJidXJnZXIuanMiLCJjaGVja2JveC5qcyIsImZvcm0uanMiLCJtYXAuanMiLCJtYXNrLXRlbC5qcyIsIm1pbmktY2FydC5qcyIsIm1vZGFsLmpzIiwicHJvZHVjdHMuanMiLCJxdWl6LmpzIiwicmFuZ2Utc2xpZGVyLmpzIiwic2l6ZXMuanMiLCJ2YWxpZGF0ZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDekVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNyRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQzFEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNwQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDNUZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDbkRBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQzVDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDYkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDN0tBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDMVJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUM5SUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDaENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDWkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJtYWluLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGZvckVhY2ggUG9seWZpbGxcclxuaWYgKHdpbmRvdy5Ob2RlTGlzdCAmJiAhTm9kZUxpc3QucHJvdG90eXBlLmZvckVhY2gpIHtcclxuICAgIE5vZGVMaXN0LnByb3RvdHlwZS5mb3JFYWNoID0gQXJyYXkucHJvdG90eXBlLmZvckVhY2g7XHJcbn1cclxuXHJcbi8vIGxvY2sgc2Nyb2xsXHJcbmZ1bmN0aW9uIGRpc2FibGVTY3JvbGwoKSB7XHJcblx0bGV0IHBhZ2VQb3NpdGlvbiA9IHdpbmRvdy5zY3JvbGxZO1xyXG5cdGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZCgnc2Nyb2xsLWxvY2snKTtcclxuXHRkb2N1bWVudC5ib2R5LmRhdGFzZXQucG9zaXRpb24gPSBwYWdlUG9zaXRpb247XHJcblx0ZG9jdW1lbnQuYm9keS5zdHlsZS50b3AgPSAtcGFnZVBvc2l0aW9uICsgJ3B4JztcclxufVxyXG5cclxuZnVuY3Rpb24gZW5hYmxlU2Nyb2xsKCkge1xyXG5cdGxldCBwYWdlUG9zaXRpb24gPSBwYXJzZUludChkb2N1bWVudC5ib2R5LmRhdGFzZXQucG9zaXRpb24sIDEwKTtcclxuXHRkb2N1bWVudC5ib2R5LnN0eWxlLnRvcCA9ICcnO1xyXG5cdGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnJlbW92ZSgnc2Nyb2xsLWxvY2snKTtcclxuXHR3aW5kb3cuc2Nyb2xsKHsgdG9wOiBwYWdlUG9zaXRpb24sIGxlZnQ6IDAgfSk7XHJcblx0ZG9jdW1lbnQuYm9keS5yZW1vdmVBdHRyaWJ1dGUoJ2RhdGEtcG9zaXRpb24nKTtcclxufVxyXG5cclxuXHJcbmNvbnN0IGNsZWFySW5wdXRzID0gKHNlbGVjdG9yKSA9PiB7XHJcblx0c2VsZWN0b3IuZm9yRWFjaChpdGVtID0+IHtcclxuXHRcdGl0ZW0udmFsdWUgPSAnJztcclxuXHR9KTtcclxuXHRsZXQgY2hlY2tib3hlcyA9IHF1aXpGb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoJy5jdXN0b20tY2hlY2tib3hfX2lucHV0Jyk7XHJcblx0aWYgKGNoZWNrYm94ZXMubGVuZ3RoID4gMCkge1xyXG5cdFx0Zm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGNoZWNrYm94ZXMubGVuZ3RoOyBpbmRleCsrKSB7XHJcblx0XHRcdGNvbnN0IGNoZWNrYm94ID0gY2hlY2tib3hlc1tpbmRleF07XHJcblx0XHRcdGNoZWNrYm94LmNoZWNrZWQgPSBmYWxzZTtcclxuXHRcdH1cclxuXHR9XHJcbn07XHJcblxyXG53aW5kb3cubm9aZW5zbW9vdGggPSB0cnVlO1xyXG5cclxubGV0IGxpbmtzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNjcm9sbCcpO1xyXG5cclxuXHJcbmxpbmtzLmZvckVhY2gobGluayA9PiB7XHJcblxyXG5cdGxpbmsuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihldmVudCkge1xyXG5cdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuXHJcblx0XHRsZXQgaGFzaCA9IHRoaXMuZ2V0QXR0cmlidXRlKCdocmVmJykucmVwbGFjZSgnIycsICcnKTtcclxuXHRcdGxldCB0b0Jsb2NrID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLicgKyBoYXNoKTtcclxuXHJcblx0XHR6ZW5zY3JvbGwudG8odG9CbG9jayk7XHJcblx0fSk7XHJcbn0pO1xyXG5cclxuY29uc3QgdXBFbGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBhZ2V1cCcpO1xyXG5cclxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsICgpID0+IHtcclxuXHRsZXQgc2Nyb2xsZWQgPSB3aW5kb3cucGFnZVlPZmZzZXQgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcDtcclxuXHRpZiAoc2Nyb2xsZWQgPiAxMzAwKSB7XHJcblx0XHR1cEVsZW0uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcblx0fSBlbHNlIHtcclxuXHRcdHVwRWxlbS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcclxuXHR9XHJcbn0pO1xyXG5cclxuY29uc3QgdG9vbHRpcEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50b29sdGlwX19idG4nKTtcclxuY29uc3QgdG9vbHRpcFRleHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudG9vbHRpcF9fdHh0Jyk7XHJcbmxldCB0b29sdGlwT3BlbiA9IGZhbHNlO1xyXG50b29sdGlwQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgZnVuY3Rpb24oKSB7XHJcblx0dG9vbHRpcE9wZW4gPSAhdG9vbHRpcE9wZW47IFxyXG5cdHRvb2x0aXBUZXh0LnN0eWxlLm9wYWNpdHkgPSAodG9vbHRpcE9wZW4gPyAnMScgOiAnMCcpO1xyXG5cdHRvb2x0aXBUZXh0LnN0eWxlLnZpc2liaWxpdHkgPSAodG9vbHRpcE9wZW4gPyAndmlzaWJsZScgOiAnaGlkZGVuJyk7XHJcblx0dG9vbHRpcFRleHQuc3R5bGUudHJhbnNmb3JtID0gKHRvb2x0aXBPcGVuID8gJ3RyYW5zbGF0ZVkoMCknIDogJ3RyYW5zbGF0ZVkoMTBweCknKTtcclxufSk7XHJcblxyXG4iLCJjb25zdCBidG5zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNwb2lsZXJfX2J0bicpO1xuXG5idG5zLmZvckVhY2goYnRuID0+IHtcblx0YnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuXHRcdGNvbnN0IHNwb2xsZXJzQmxvY2sgPSB0aGlzLmNsb3Nlc3QoJy5zcG9pbGVycycpO1xuXHRcdGNvbnN0IG9uZVNwb2xsZXIgPSBzcG9sbGVyc0Jsb2NrLmhhc0F0dHJpYnV0ZSgnZGF0YS1vbmUtc3BvbGxlcicpID8gdHJ1ZSA6IGZhbHNlO1xuXHRcdGlmICghc3BvbGxlcnNCbG9jay5xdWVyeVNlbGVjdG9yQWxsKCcuc2xpZGUnKS5sZW5ndGgpIHtcblx0XHRcdGlmIChvbmVTcG9sbGVyICYmICF0aGlzLmNsYXNzTGlzdC5jb250YWlucygnYWN0aXZlJykpIHtcblx0XHRcdFx0Y29uc3Qgc3BvbGxlckFjdGl2ZSA9IHNwb2xsZXJzQmxvY2sucXVlcnlTZWxlY3RvcignLnNwb2lsZXJfX2J0bi5hY3RpdmUnKTtcblx0XHRcdFx0aWYgKHNwb2xsZXJBY3RpdmUpIHtcblx0XHRcdFx0XHRzcG9sbGVyQWN0aXZlLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xuXHRcdFx0XHRcdHNsaWRlVXAoc3BvbGxlckFjdGl2ZS5uZXh0RWxlbWVudFNpYmxpbmcsIDUwMCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHRoaXMuY2xhc3NMaXN0LnRvZ2dsZSgnYWN0aXZlJyk7XG5cdFx0XHRzbGlkZVRvZ2dsZSh0aGlzLm5leHRFbGVtZW50U2libGluZywgNTAwKTtcblx0XHR9XG5cdH0pO1xufSk7XG5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy9TbGlkZVRvZ2dsZVxubGV0IHNsaWRlVXAgPSAodGFyZ2V0LCBkdXJhdGlvbiA9IDUwMCkgPT4ge1xuXHRpZiAoIXRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3NsaWRlJykpIHtcblx0XHR0YXJnZXQuY2xhc3NMaXN0LmFkZCgnc2xpZGUnKTtcblx0XHR0YXJnZXQuc3R5bGUudHJhbnNpdGlvblByb3BlcnR5ID0gJ2hlaWdodCwgbWFyZ2luLCBwYWRkaW5nJztcblx0XHR0YXJnZXQuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gZHVyYXRpb24gKyAnbXMnO1xuXHRcdHRhcmdldC5zdHlsZS5oZWlnaHQgPSB0YXJnZXQub2Zmc2V0SGVpZ2h0ICsgJ3B4Jztcblx0XHR0YXJnZXQub2Zmc2V0SGVpZ2h0O1xuXHRcdHRhcmdldC5zdHlsZS5vdmVyZmxvdyA9ICdoaWRkZW4nO1xuXHRcdHRhcmdldC5zdHlsZS5oZWlnaHQgPSAwO1xuXHRcdHRhcmdldC5zdHlsZS5wYWRkaW5nVG9wID0gMDtcblx0XHR0YXJnZXQuc3R5bGUucGFkZGluZ0JvdHRvbSA9IDA7XG5cdFx0dGFyZ2V0LnN0eWxlLm1hcmdpblRvcCA9IDA7XG5cdFx0dGFyZ2V0LnN0eWxlLm1hcmdpbkJvdHRvbSA9IDA7XG5cdFx0d2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xuXHRcdFx0dGFyZ2V0LmhpZGRlbiA9IHRydWU7XG5cdFx0XHR0YXJnZXQuc3R5bGUucmVtb3ZlUHJvcGVydHkoJ2hlaWdodCcpO1xuXHRcdFx0dGFyZ2V0LnN0eWxlLnJlbW92ZVByb3BlcnR5KCdwYWRkaW5nLXRvcCcpO1xuXHRcdFx0dGFyZ2V0LnN0eWxlLnJlbW92ZVByb3BlcnR5KCdwYWRkaW5nLWJvdHRvbScpO1xuXHRcdFx0dGFyZ2V0LnN0eWxlLnJlbW92ZVByb3BlcnR5KCdtYXJnaW4tdG9wJyk7XG5cdFx0XHR0YXJnZXQuc3R5bGUucmVtb3ZlUHJvcGVydHkoJ21hcmdpbi1ib3R0b20nKTtcblx0XHRcdHRhcmdldC5zdHlsZS5yZW1vdmVQcm9wZXJ0eSgnb3ZlcmZsb3cnKTtcblx0XHRcdHRhcmdldC5zdHlsZS5yZW1vdmVQcm9wZXJ0eSgndHJhbnNpdGlvbi1kdXJhdGlvbicpO1xuXHRcdFx0dGFyZ2V0LnN0eWxlLnJlbW92ZVByb3BlcnR5KCd0cmFuc2l0aW9uLXByb3BlcnR5Jyk7XG5cdFx0XHR0YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSgnc2xpZGUnKTtcblx0XHR9LCBkdXJhdGlvbik7XG5cdH1cbn1cbmxldCBzbGlkZURvd24gPSAodGFyZ2V0LCBkdXJhdGlvbiA9IDUwMCkgPT4ge1xuaWYgKCF0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdzbGlkZScpKSB7XG5cdHRhcmdldC5jbGFzc0xpc3QuYWRkKCdzbGlkZScpO1xuXHRpZiAodGFyZ2V0LmhpZGRlbikge1xuXHRcdHRhcmdldC5oaWRkZW4gPSBmYWxzZTtcblx0fVxuXHRsZXQgaGVpZ2h0ID0gdGFyZ2V0Lm9mZnNldEhlaWdodDtcblx0dGFyZ2V0LnN0eWxlLm92ZXJmbG93ID0gJ2hpZGRlbic7XG5cdHRhcmdldC5zdHlsZS5oZWlnaHQgPSAwO1xuXHR0YXJnZXQuc3R5bGUucGFkZGluZ1RvcCA9IDA7XG5cdHRhcmdldC5zdHlsZS5wYWRkaW5nQm90dG9tID0gMDtcblx0dGFyZ2V0LnN0eWxlLm1hcmdpblRvcCA9IDA7XG5cdHRhcmdldC5zdHlsZS5tYXJnaW5Cb3R0b20gPSAwO1xuXHR0YXJnZXQub2Zmc2V0SGVpZ2h0O1xuXHR0YXJnZXQuc3R5bGUudHJhbnNpdGlvblByb3BlcnR5ID0gXCJoZWlnaHQsIG1hcmdpbiwgcGFkZGluZ1wiO1xuXHR0YXJnZXQuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gZHVyYXRpb24gKyAnbXMnO1xuXHR0YXJnZXQuc3R5bGUuaGVpZ2h0ID0gaGVpZ2h0ICsgJ3B4Jztcblx0dGFyZ2V0LnN0eWxlLnJlbW92ZVByb3BlcnR5KCdwYWRkaW5nLXRvcCcpO1xuXHR0YXJnZXQuc3R5bGUucmVtb3ZlUHJvcGVydHkoJ3BhZGRpbmctYm90dG9tJyk7XG5cdHRhcmdldC5zdHlsZS5yZW1vdmVQcm9wZXJ0eSgnbWFyZ2luLXRvcCcpO1xuXHR0YXJnZXQuc3R5bGUucmVtb3ZlUHJvcGVydHkoJ21hcmdpbi1ib3R0b20nKTtcblx0d2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xuXHRcdHRhcmdldC5zdHlsZS5yZW1vdmVQcm9wZXJ0eSgnaGVpZ2h0Jyk7XG5cdFx0dGFyZ2V0LnN0eWxlLnJlbW92ZVByb3BlcnR5KCdvdmVyZmxvdycpO1xuXHRcdHRhcmdldC5zdHlsZS5yZW1vdmVQcm9wZXJ0eSgndHJhbnNpdGlvbi1kdXJhdGlvbicpO1xuXHRcdHRhcmdldC5zdHlsZS5yZW1vdmVQcm9wZXJ0eSgndHJhbnNpdGlvbi1wcm9wZXJ0eScpO1xuXHRcdHRhcmdldC5jbGFzc0xpc3QucmVtb3ZlKCdzbGlkZScpO1xuXHR9LCBkdXJhdGlvbik7XG59XG59XG5sZXQgc2xpZGVUb2dnbGUgPSAodGFyZ2V0LCBkdXJhdGlvbiA9IDUwMCkgPT4ge1xuXHRpZiAodGFyZ2V0LmhpZGRlbikge1xuXHRcdHJldHVybiBzbGlkZURvd24odGFyZ2V0LCBkdXJhdGlvbik7XG5cdH0gZWxzZSB7XG5cdFx0cmV0dXJuIHNsaWRlVXAodGFyZ2V0LCBkdXJhdGlvbik7XG5cdH1cbn0iLCJsZXQgbWVudUJvZHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWVudScpO1xyXG5sZXQgbWVudUl0ZW0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubWVudV9fbGluaycpO1xyXG5sZXQgaGFtYnVyZ2VyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmhhbWJ1cmdlcicpO1xyXG5cclxuaGFtYnVyZ2VyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4geyAgICBcclxuICAgIGhhbWJ1cmdlci5jbGFzc0xpc3QudG9nZ2xlKCdhY3RpdmUnKTtcclxuICAgIG1lbnVCb2R5LmNsYXNzTGlzdC50b2dnbGUoJ2FjdGl2ZScpO1xyXG5cclxuICAgIGlmIChoYW1idXJnZXIuY2xhc3NMaXN0LmNvbnRhaW5zKCdhY3RpdmUnKSkge1xyXG4gICAgICAgIGhhbWJ1cmdlci5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCAn0LfQsNC60YDRi9GC0Ywg0L3QsNCy0LjQs9Cw0YbQuNGOJyk7XHJcbiAgICAgICAgZGlzYWJsZVNjcm9sbCgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBoYW1idXJnZXIuc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgJ9C+0YLQutGA0YvRgtGMINC90LDQstC40LPQsNGG0LjRjicpO1xyXG4gICAgICAgIGVuYWJsZVNjcm9sbCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIG1lbnVCb2R5LmZvY3VzKCk7XHJcbiAgICB9LCA2MDApO1xyXG59KTtcclxuXHJcbm1lbnVJdGVtLmZvckVhY2goaXRlbSA9PiB7XHJcbiAgICBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgaWYgKGhhbWJ1cmdlci5jbGFzc0xpc3QuY29udGFpbnMoJ2FjdGl2ZScpKSB7XHJcbiAgICAgICAgICAgIGhhbWJ1cmdlci5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgbWVudUJvZHkuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIGhhbWJ1cmdlci5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCAn0L7RgtC60YDRi9GC0Ywg0L3QsNCy0LjQs9Cw0YbQuNGOJyk7XHJcbiAgICAgICAgICAgIGVuYWJsZVNjcm9sbCgpO1xyXG4gICAgICAgIH1cclxuICAgIH0pXHJcbn0pXHJcblxyXG5sZXQgZmlsdGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNhdGFsb2dfX2ZpbHRlcnMnKTtcclxubGV0IGZpbHRlckJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXRhbG9nX19idG4nKTtcclxubGV0IGZpbHRlckJ1cmdlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXRhbG9nLWhhbWJ1cmdlcicpO1xyXG5cclxuZmlsdGVyQnVyZ2VyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4geyAgICBcclxuICAgIGZpbHRlckJ1cmdlci5jbGFzc0xpc3QudG9nZ2xlKCdhY3RpdmUnKTtcclxuICAgIGZpbHRlci5jbGFzc0xpc3QudG9nZ2xlKCdhY3RpdmUnKTtcclxuICAgIGlmIChmaWx0ZXJCdXJnZXIuY2xhc3NMaXN0LmNvbnRhaW5zKCdhY3RpdmUnKSkge1xyXG4gICAgICAgIGZpbHRlckJ1cmdlci5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCAn0LfQsNC60YDRi9GC0Ywg0YTQuNC70YzRgtGAJyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGZpbHRlckJ1cmdlci5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCAn0L7RgtC60YDRi9GC0Ywg0YTQuNC70YzRgtGAJyk7XHJcbiAgICB9XHJcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICBmaWx0ZXIuZm9jdXMoKTtcclxuICAgIH0sIDYwMCk7XHJcbn0pO1xyXG5cclxuZmlsdGVyQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIGlmIChmaWx0ZXJCdXJnZXIuY2xhc3NMaXN0LmNvbnRhaW5zKCdhY3RpdmUnKSkge1xyXG4gICAgICAgIGZpbHRlckJ1cmdlci5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcclxuICAgICAgICBmaWx0ZXIuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICAgICAgZmlsdGVyQnVyZ2VyLnNldEF0dHJpYnV0ZSgnYXJpYS1sYWJlbCcsICfQvtGC0LrRgNGL0YLRjCDRhNC40LvRjNGC0YAnKTsgXHJcbiAgICB9XHJcbn0pXHJcbiIsImNvbnN0IGNoZWNrQm94ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNhdGFsb2ctY2hlY2tib3hfX2xhYmVsLCAuY3VzdG9tLWNoZWNrYm94X190ZXh0Jyk7XHJcblxyXG5jaGVja0JveC5mb3JFYWNoKGl0ZW0gPT4ge1xyXG5cdGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChlKSA9PiB7XHJcblx0XHRpZiAoZS5jb2RlID09PSAnRW50ZXInIHx8IGUuY29kZSA9PT0gJ051bXBhZEVudGVyJyB8fCBlLmNvZGUgPT09ICdTcGFjZScpIHtcclxuXHRcdFx0bGV0IGNoZWNrID0gZS50YXJnZXQucHJldmlvdXNFbGVtZW50U2libGluZztcclxuXHRcdFx0aWYgKGNoZWNrLnR5cGUgPT0gJ3JhZGlvJykge1xyXG5cdFx0XHRcdGlmIChjaGVjay5jaGVja2VkID09PSBmYWxzZSkge1xyXG5cdFx0XHRcdFx0Y2hlY2suY2hlY2tlZCA9IHRydWU7XHJcblx0XHRcdFx0fSBcclxuXHRcdFx0fSBlbHNlIGlmIChjaGVjay50eXBlID09ICdjaGVja2JveCcpIHtcclxuXHRcdFx0XHRpZiAoY2hlY2suY2hlY2tlZCA9PT0gZmFsc2UpIHtcclxuXHRcdFx0XHRcdGNoZWNrLmNoZWNrZWQgPSB0cnVlO1xyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRjaGVjay5jaGVja2VkID0gZmFsc2U7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblxyXG5cdFx0fVxyXG5cdH0pO1xyXG59KTsiLCJjb25zdCBmb3JtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2Zvcm0nKTtcclxuXHJcbmlmIChmb3Jtcy5sZW5ndGggPiAwKSB7XHJcblx0Zm9ybXMuZm9yRWFjaChpdGVtID0+IHtcclxuXHRcdGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGUpID0+IHtcclxuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0XHRsZXQgZm9ybSA9IGUudGFyZ2V0O1x0XHJcblx0XHRcdGxldCBpbnB1dHMgPSBmb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0Jyk7XHJcblx0XHRcdC8vIGxldCBmaWxlTmFtZSA9IHRhcmdldC5xdWVyeVNlbGVjdG9yKCcuZmlsZV9fbmFtZScpOyAvLyDQtdGB0LvQuCDQtdGB0YLRjCDQt9Cw0LPRgNGD0LfQutCwINGE0LDQudC70LAgKNCyINCw0YLRgNC40LHRg9GCINC00L7QsdCw0LLQuNGC0YwgZmlsZSlcclxuXHRcdFx0bGV0IHZhbGlkID0gdmFsaWRJbnB1dChmb3JtKTtcclxuXHRcdFx0aWYgKHZhbGlkID09PSAwICYmIHZhbGlkQ2hlY2soZm9ybSkpIHtcclxuXHRcdFx0XHRmb3JtUmVtb3ZlRXJyb3IoZm9ybSk7XHJcblxyXG5cdFx0XHRcdC8vKiA9PT09PT09PSDQodC+0L7QsdGJ0LXQvdC40LUg0L7QsSDQvtGC0L/RgNCw0LLQutC1ID09PT09PT09PT09PVxyXG5cdFx0XHRcdGxldCB0ZXh0TWVzc2FnZSA9IGZvcm0ucXVlcnlTZWxlY3RvcignLmZvcm0tbWVzc2FnZScpO1xyXG5cdFx0XHRcdGlmICh0ZXh0TWVzc2FnZSkge1xyXG5cdFx0XHRcdFx0dGV4dE1lc3NhZ2UudGV4dENvbnRlbnQgPSAn0JfQsNCz0YDRg9C30LrQsC4uLic7XHJcblx0XHRcdFx0XHR0ZXh0TWVzc2FnZS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdC8vKiDQl9Cw0L/QuNGB0Ywg0L3QsNC30LLQsNC90LjRjyDRh9C10LrQsdC+0LrRgdCwINCyIHZhbHVlINC40L3Qv9GD0YLQsCDRh9C10LrQsdC+0LrRgdCwICjQtdGB0LvQuCDQtdGB0YLRjCDRh9C10LrQsdC+0LrRgdGLKVxyXG5cdFx0XHRcdC8vIGlucHV0cy5mb3JFYWNoKGlucHV0ID0+IHtcclxuXHRcdFx0XHQvLyBcdGlmIChpbnB1dC50eXBlID09ICdjaGVja2JveCcgfHwgaW5wdXQudHlwZSA9PSAncmFkaW8nKSB7XHJcblx0XHRcdFx0Ly8gXHRcdGlucHV0LnZhbHVlID0gaW5wdXQubmV4dEVsZW1lbnRTaWJsaW5nLnRleHRDb250ZW50O1xyXG5cdFx0XHRcdC8vIFx0fVxyXG5cdFx0XHRcdC8vIH0pO1xyXG5cclxuXHRcdFx0XHQvLyo9PT09PT09PT0gRm9ybURhdGEgPT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cdFx0XHRcdGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKGl0ZW0pO1xyXG5cdFx0XHRcdC8vIGZvcm1EYXRhLmFwcGVuZCgnaW1hZ2UnLCBmb3JtSW1hZ2UuZmlsZXNbMF0pO1xyXG5cdFx0XHRcdGlmIChmb3JtLmNsYXNzTGlzdC5jb250YWlucygnbW9kYWwtY2FydC1mb3JtJykpIHtcclxuXHRcdFx0XHRcdGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5tb2RhbC1jYXJ0LXByb2R1Y3QnKS5mb3JFYWNoKChlbCwgaWR4KSA9PiB7XHJcblx0XHRcdFx0XHRcdGxldCB0aXRsZSA9IGVsLnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbC1jYXJ0LXByb2R1Y3RfX3RpdGxlJykudGV4dENvbnRlbnQ7XHJcblx0XHRcdFx0XHRcdGxldCBwcmljZSA9IGVsLnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbC1jYXJ0LXByb2R1Y3RfX3ByaWNlJykudGV4dENvbnRlbnQ7XHJcblx0XHRcdFx0XHRcdGZvcm1EYXRhLmFwcGVuZChgcHJvZHVjdC0ke2lkeCArIDF9YCwgYCR7dGl0bGV9LCAke3ByaWNlfWApO1xyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdCAgXHJcblx0XHRcdFx0XHRmb3JtRGF0YS5hcHBlbmQoYHN1bW1gLCBgJHtkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubW9kYWwtY2FydC1vcmRlcl9fc3VtbSBzcGFuJykudGV4dENvbnRlbnR9YCk7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHQvLyogPT09PT0g0J/RgNC+0LLQtdGA0LrQsCDRhNC+0YDQvNGLID09PT09XHJcblx0XHRcdFx0Ly8gZm9yKHZhciBwYWlyIG9mIGZvcm1EYXRhLmVudHJpZXMoKSkge1xyXG5cdFx0XHRcdC8vIFx0Y29uc29sZS5sb2cocGFpclswXSsgJywgJysgcGFpclsxXSk7XHJcblx0XHRcdFx0Ly8gfVxyXG5cclxuXHRcdFx0XHQvLyo9PT09PT09PT0g0J7RgtC/0YDQsNCy0LrQsCDQtNCw0L3QvdGL0YUgPT09PT09PT09PT09PT09XHJcblx0XHRcdFx0Y29uc3QgcG9zdERhdGEgPSBhc3luYyAodXJsLCBkYXRhKSA9PiB7XHJcblx0XHRcdFx0XHRsZXQgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIHtcclxuXHRcdFx0XHRcdFx0bWV0aG9kOiBcIlBPU1RcIixcclxuXHRcdFx0XHRcdFx0Ym9keTogZGF0YVxyXG5cdFx0XHRcdFx0fSk7XHRcclxuXHRcdFx0XHRcdGlmIChyZXNwb25zZS5vaykge1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8gbGV0IHJlc3VsdCA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTsgLy8ganNvbigpIC0g0LTQu9GPINCy0YvQstC+0LTQsCDRgdC+0L7QsdGJ0LXQvdC40Y87XHJcblx0XHRcdFx0XHRcdC8vIGFsZXJ0KHJlc3VsdC5tZXNzYWdlKTtcclxuXHJcblx0XHRcdFx0XHRcdGxldCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS50ZXh0KCk7IC8vIHRleHQoKSAtINC00LvRjyDQv9GA0L7QstC10YDQutC4INC90LAg0YHQtdGA0LLQtdGA0LUsINC/0L7QtNC60LvRjtGH0LjRgtGMIHNlcnZlci5waHApXHJcblx0XHRcdFx0XHRcdC8vIGNvbnNvbGUubG9nKHJlc3VsdCk7IC8vINGN0YLQviDQtNC70Y8g0L/RgNC+0LLQtdGA0LrQuCDQvdCwINGB0LXRgNCy0LXRgNC1XHJcblxyXG5cdFx0XHRcdFx0XHRpZiAodGV4dE1lc3NhZ2UpIHtcclxuXHRcdFx0XHRcdFx0XHR0ZXh0TWVzc2FnZS50ZXh0Q29udGVudCA9ICfQodC/0LDRgdC40LHQviwg0YHQutC+0YDQviDQvNGLINGBINCy0LDQvNC4INGB0LLRj9C20LjQvNGB0Y8hJztcclxuXHRcdFx0XHRcdFx0XHR0ZXh0TWVzc2FnZS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHQvLyBjbGVhcklucHV0cyhpbnB1dHMpO1xyXG5cdFx0XHRcdFx0XHRpZiAoaXRlbS5jbGFzc0xpc3QuY29udGFpbnMoJ21vZGFsLWNhcnQtZm9ybScpKSB7XHJcblx0XHRcdFx0XHRcdFx0YWxsRGVsKCk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0Zm9ybS5yZXNldCgpO1xyXG5cdFx0XHRcdFx0XHRzZXRUaW1lb3V0KCgpID0+IHtcclxuXHRcdFx0XHRcdFx0XHRpZiAodGV4dE1lc3NhZ2UpIHtcclxuXHRcdFx0XHRcdFx0XHRcdHRleHRNZXNzYWdlLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0fSwgNTAwMCk7XHJcblx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHQvLyBhbGVydChcItCe0YjQuNCx0LrQsFwiKTtcclxuXHRcdFx0XHRcdFx0aWYgKHRleHRNZXNzYWdlKSB7XHJcblx0XHRcdFx0XHRcdFx0dGV4dE1lc3NhZ2UudGV4dENvbnRlbnQgPSAn0KfRgtC+LdGC0L4g0L/QvtGI0LvQviDQvdC1INGC0LDQui4uLic7XHJcblx0XHRcdFx0XHRcdFx0dGV4dE1lc3NhZ2UuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0c2V0VGltZW91dCgoKSA9PiB7XHJcblx0XHRcdFx0XHRcdFx0Ly8gZm9ybS5yZXNldCgpO1xyXG5cdFx0XHRcdFx0XHRcdGlmICh0ZXh0TWVzc2FnZSkge1xyXG5cdFx0XHRcdFx0XHRcdFx0dGV4dE1lc3NhZ2UuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9LCA1MDAwKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9O1xyXG5cdFx0XHRcdC8vIHBvc3REYXRhKCcuLi9zZW5kbWFpbC5waHAnLCBmb3JtRGF0YSk7XHJcblx0XHRcdFx0cG9zdERhdGEoJy4uL3NlcnZlci5waHAnLCBmb3JtRGF0YSkgLy8hINGD0LHRgNCw0YLRjCAo0Y3RgtC+INC00LvRjyDQv9GA0L7QstC10YDQutC4INC90LAg0YHQtdGA0LLQtdGA0LUpXHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cdH0pO1xyXG59IiwibGV0IGZsYWcgPSAwO1xyXG5sZXQgbGF6eVNjcmlwdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3NjcmlwdFtkYXRhLXNyY10nKTtcclxuXHJcbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBmdW5jdGlvbigpIHtcclxuXHRsZXQgc2Nyb2xsWSA9IHdpbmRvdy5zY3JvbGxZO1xyXG5cdGxldCBtYXBPZmZzZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI21hcFwiKS5vZmZzZXRUb3A7XHJcblxyXG5cdGlmICgoc2Nyb2xsWSA+PSBtYXBPZmZzZXQgLSA1MDApICYmIChmbGFnID09IDApKSB7XHJcblx0XHRmbGFnID0gMTtcclxuXHRcdC8vINCa0LDQuiDRgtC+0LvRjNC60L4gQVBJINCv0L3QtNC10LrRgS7QmtCw0YDRgiDQt9Cw0LPRgNGD0LfQuNC70LjRgdGMLCDRgdGA0LDQt9GDINGE0L7RgNC80LjRgNGD0LXQvCDQutCw0YDRgtGDINC4INC/0L7QvNC10YnQsNC10Lwg0LIg0LHQu9C+0Log0YEg0LjQtNC10L3RgtC40YTQuNC60LDRgtC+0YDQvtC8XHJcblx0XHRsb2FkU2NyaXB0KCk7XHJcblx0fVxyXG59KTtcclxuXHJcbi8vINCk0YPQvdC60YbQuNGPINC30LDQs9GA0YPQt9C60LggQVBJINCv0L3QtNC10LrRgS7QmtCw0YDRglxyXG5mdW5jdGlvbiBsb2FkU2NyaXB0KCl7XHJcblx0bGV0IHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIik7XHJcblxyXG5cdGlmIChzY3JpcHQucmVhZHlTdGF0ZSkgeyAgLy8gSUVcclxuXHRcdHNjcmlwdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbigpe1xyXG5cdFx0XHRpZiAoc2NyaXB0LnJlYWR5U3RhdGUgPT0gXCJsb2FkZWRcIiB8fCBzY3JpcHQucmVhZHlTdGF0ZSA9PSBcImNvbXBsZXRlXCIpIHtcclxuXHRcdFx0XHRzY3JpcHQub25yZWFkeXN0YXRlY2hhbmdlID0gbnVsbDtcclxuXHRcdFx0XHR5bWFwcy5yZWFkeShpbml0KTtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHR9IGVsc2UgeyAgLy8g0JTRgNGD0LPQuNC1INCx0YDQsNGD0LfQtdGA0YtcclxuXHRcdHNjcmlwdC5vbmxvYWQgPSBmdW5jdGlvbigpe1xyXG5cdFx0XHR5bWFwcy5yZWFkeShpbml0KTtcclxuXHRcdH07XHJcblx0fVxyXG5cclxuXHRzY3JpcHQuc3JjID0gXCJodHRwczovL2FwaS1tYXBzLnlhbmRleC5ydS8yLjEvP2xhbmc9cnVfUlVcIjtcclxuXHRkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImhlYWRcIilbMF0uYXBwZW5kQ2hpbGQoc2NyaXB0KTtcclxufVxyXG5cclxuLy/QpNGD0L3QutGG0LjRjyDRgdC+0LfQtNCw0L3QuNGPINC60LDRgNGC0Ysg0YHQsNC50YLQsCDQuCDQt9Cw0YLQtdC8INCy0YHRgtCw0LLQutC4INC10LUg0LIg0LHQu9C+0Log0YEg0LjQtNC10L3RgtC40YTQuNC60LDRgtC+0YDQvtC8IG1hcDtcclxuZnVuY3Rpb24gaW5pdCgpe1xyXG5cdGNvbnN0IG15TWFwID0gbmV3IHltYXBzLk1hcChcIm1hcFwiLCB7XHJcblx0XHRjZW50ZXI6IFs1OS44MzA0ODEsIDMwLjE0MjE5N10sXHJcblx0XHR6b29tOiAxMCxcclxuXHRcdGNvbnRyb2xzOiBbXVxyXG5cclxuXHR9KTtcclxuXHRsZXQgbXlQbGFjZW1hcmsgID0gbmV3IHltYXBzLlBsYWNlbWFyayhbNTkuODMwNDgxLCAzMC4xNDIxOTddLCB7fSwge1xyXG5cdFx0aWNvbkxheW91dDogJ2RlZmF1bHQjaW1hZ2UnLFxyXG5cdFx0aWNvbkltYWdlSHJlZjogJ2ltZy9wbGFjZW1hcmsucG5nJyxcclxuXHRcdGljb25JbWFnZVNpemU6IFsyNSwgMzRdLFxyXG5cdFx0aWNvbkltYWdlT2Zmc2V0OiBbLTE5LCAtNDRdXHJcblx0fSk7XHRcdFx0XHJcblx0bXlNYXAuZ2VvT2JqZWN0cy5hZGQobXlQbGFjZW1hcmspO1xyXG5cdG15TWFwLmJlaGF2aW9ycy5kaXNhYmxlKFsnc2Nyb2xsWm9vbSddKTtcclxufSIsImxldCBzZXRDdXJzb3JQb3NpdGlvbiA9IChwb3MsIGVsZW0pID0+IHtcclxuICAgIGVsZW0uZm9jdXMoKTtcclxuICAgIGlmIChlbGVtLnNldFNlbGVjdGlvblJhbmdlKSB7XHJcbiAgICAgICAgZWxlbS5zZXRTZWxlY3Rpb25SYW5nZShwb3MsIHBvcyk7XHJcbiAgICB9IGVsc2UgaWYgKGVsZW0uY3JlYXRlVGV4dFJhbmdlKSB7XHJcbiAgICAgICAgbGV0IHJhbmdlID0gZWxlbS5jcmVhdGVUZXh0UmFuZ2UoKTtcclxuXHJcbiAgICAgICAgcmFuZ2UuY29sbGFwc2UodHJ1ZSk7XHJcbiAgICAgICAgcmFuZ2UubW92ZUVuZCgnY2hhcmFjdGVyJywgcG9zKTtcclxuICAgICAgICByYW5nZS5tb3ZlU3RhcnQoJ2NoYXJhY3RlcicsIHBvcyk7XHJcbiAgICAgICAgcmFuZ2Uuc2VsZWN0KCk7XHJcbiAgICB9XHJcbn07XHJcbmZ1bmN0aW9uIGNyZWF0ZU1hc2soZXZlbnQpIHtcclxuICAgIGxldCBtYXRyaXggPSAnKzcgKF9fXykgX19fIF9fIF9fJyxcclxuICAgICAgICBpID0gMCxcclxuICAgICAgICBkZWYgPSBtYXRyaXgucmVwbGFjZSgvXFxEL2csICcnKSxcclxuICAgICAgICB2YWwgPSB0aGlzLnZhbHVlLnJlcGxhY2UoL1xcRC9nLCAnJyk7XHJcbiAgICBpZiAoZGVmLmxlbmd0aCA+PSB2YWwubGVuZ3RoKSB7XHJcbiAgICAgICAgdmFsID0gZGVmO1xyXG4gICAgfVxyXG4gICAgdGhpcy52YWx1ZSA9IG1hdHJpeC5yZXBsYWNlKC8uL2csIGZ1bmN0aW9uKGEpIHtcclxuICAgICAgICByZXR1cm4gL1tfXFxkXS8udGVzdChhKSAmJiBpIDwgdmFsLmxlbmd0aCA/IHZhbC5jaGFyQXQoaSsrKSA6IGkgPj0gdmFsLmxlbmd0aCA/ICcnIDogYTtcclxuICAgIH0pO1xyXG4gICAgaWYgKGV2ZW50LnR5cGUgPT09J2JsdXInKSB7XHJcbiAgICAgICAgaWYgKHRoaXMudmFsdWUubGVuZ3RoID09IDIgfHwgdGhpcy52YWx1ZS5sZW5ndGggPCBtYXRyaXgubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIHRoaXMudmFsdWUgPSAnJztcclxuICAgICAgICB9XHJcbiAgICB9IGVsc2UgaWYgKGV2ZW50LnR5cGUgPT09J2tleXVwJyB8fCBldmVudC50eXBlID09PSdtb3VzZXVwJykge1xyXG4gICAgICAgIGxldCBjdXIgPSB0aGlzLnNlbGVjdGlvblN0YXJ0O1xyXG4gICAgICAgIGlmIChjdXIgPT0gJzAnKSB7XHJcbiAgICAgICAgICAgIHNldEN1cnNvclBvc2l0aW9uKHRoaXMudmFsdWUubGVuZ3RoLCB0aGlzKTtcclxuICAgICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHNldEN1cnNvclBvc2l0aW9uKHRoaXMudmFsdWUubGVuZ3RoLCB0aGlzKTsgICAgICAgIFxyXG4gICAgfVxyXG59XHJcbmxldCB0ZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcudGVsJyk7XHJcbnRlbC5mb3JFYWNoKGlucHV0ID0+IHtcclxuICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgY3JlYXRlTWFzayk7XHJcbiAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdmb2N1cycsIGNyZWF0ZU1hc2spO1xyXG4gICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignYmx1cicsIGNyZWF0ZU1hc2spO1xyXG4gICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCBjcmVhdGVNYXNrKTtcclxuICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCBjcmVhdGVNYXNrKTtcclxufSk7IiwiY29uc3QgY2FydEJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJ0Jyk7XHJcbmNvbnN0IG1pbmlDYXJ0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1pbmktY2FydCcpO1xyXG4vLyBjb25zdCBtaW5pQ2FydEl0ZW0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubWluaS1jYXJ0X19pdGVtJyk7XHJcblxyXG5jYXJ0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG5cdG1pbmlDYXJ0LmNsYXNzTGlzdC50b2dnbGUoJ21pbmktY2FydC0tb3BlbicpO1xyXG59KTtcclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcclxuXHRpZiAoIWUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnbWluaS1jYXJ0JykgJiYgIWUudGFyZ2V0LmNsb3Nlc3QoJy5taW5pLWNhcnQnKSAmJiAhZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdjYXJ0JykgJiYgIWUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnbWluaS1jYXJ0X19kZWxldGUnKVxyXG5cdHx8IGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnbWluaS1jYXJ0X19idG4nKSkge1xyXG5cdFx0bWluaUNhcnQuY2xhc3NMaXN0LnJlbW92ZSgnbWluaS1jYXJ0LS1vcGVuJyk7XHJcblx0fVxyXG59KTsiLCIvL1RPRE8g0JTQvtCx0LDQstC40YLRjCDQutC70LDRgdGB0Ys6XHJcbi8vKiBkYXRhLWJ0bj1cIm1vZGFsLW5hbWVcIiAtINC00L7QsdCw0LLQuNGC0Ywg0LrQvdC+0L/QutCw0Lwg0L7RgtC60YDRi9GC0LjRjyDQvNC+0LTQsNC70YzQvdC+0LPQviDQvtC60L3QsCAobW9kYWwtbmFtZSAtINC40LzRjyDQvtC60L3QsCwg0LrQvtGC0L7RgNC+0LUg0LTQvtC70LbQvdC+INC+0YLQutGA0YvRgtGM0YHRjylcclxuLy8qIGRhdGEtbW9kYWwgLSDQtNC+0LHQsNCy0LjRgtGMINCy0YHQtdC8INC80L7QtNCw0LvRjNC90YvQvCDQvtC60L3QsNC8IChtb2RhbC1uYW1lKSAo0LXRgdC70Lgg0LjRhSDQvdC10YHQutC+0LvRjNC60L4pXHJcbi8vKiBibG9jay1maXggLSDQtNC+0LHQsNCy0LjRgtGMINC60LvQsNGB0YEg0LTQu9GPINCx0LvQvtC60L7QsiDRgSBwb3NpdGlvbjogYWJzb2x1dGUg0LjQu9C4IGZpeGVkICjQtNC+0LHQsNCy0LjRgtGB0Y8gcGFkZGluZylcclxuLy8qIHNtYWxsLWZpeCAtINC00L7QsdCw0LLQuNGC0Ywg0LrQu9Cw0YHRgSDQtNC70Y8g0LzQsNC70LXQvdGM0LrQuNGFINCx0LvQvtC60L7QsiDRgSBwb3NpdGlvbjogYWJzb2x1dGUg0LjQu9C4IGZpeGVkICjQtNC+0LHQsNCy0LjRgtGB0Y8gbWFyZ2luKVxyXG4vLyogZGF0YS1pbnNpZGUgLSDQtNC+0LHQsNCy0LjRgtGMINC60L3QvtC/0LrQsNC8INCy0L3Rg9GC0YDQuCDQvNC+0LTQsNC70YzQvdC+0LPQviDQvtC60L3QsCwg0LrQvtGC0L7RgNGL0LUg0L7RgtC60YDRi9Cy0LDRjtGCINGB0LvQtdC00YPRjtGJ0LXQtSDQvNC+0LTQsNC70YzQvdC+0LUg0L7QutC90L4gKNGH0YLQviDQsdGLINGB0L7RhdGA0LDQvdC40YLRjCDRhNC+0LrRg9GBINC90LAg0LrQvdC+0L/QutC1INCy0L3QtSDQvtC60L3QsClcclxuXHJcbi8vPyDRjdGC0Lgg0L/QsNGA0LDQvNC10YLRgNGLINGD0LrQsNC30YvQstCw0YLRjCwg0LXRgdC70Lgg0L7QvdC4INGA0LDQt9C90YvQtSDQtNC70Y8g0YDQsNC30L3Ri9GFINC+0LrQvtC9IC0g0LXRgdC70Lgg0L7QtNC40L3QsNC60L7QstGL0LUgLSDQvNC10L3Rj9C10Lwgc3BlZWRUaW1lINC4IG1vZGFsQW5pbWF0aW9uXHJcbi8vKiBkYXRhLXNwZWVkPVwiMzAwXCIgLSDQtNC+0LHQsNCy0LjRgtGMINCy0YDQtdC80Y8g0LLRi9C/0L7Qu9C90LXQvdC40Y8sINC/0L4g0YPQvNC+0LvRh9Cw0L3QuNGOIDUwMCAo0YHRgtCw0LLQuNGC0YHRjyDQsiDRgdC+0L7RgtCy0LXRgtGB0YLQstC40Lgg0YEgJHRyYW5zaXRpb24tdGltZSlcclxuLy8qIGRhdGEtYW5pbWF0aW9uPVwiZmFkZUluVXBcIiAgLSDQtNC+0LHQsNCy0LjRgtGMINCw0L3QuNC80LDRhtC40Y4g0L/RgNC4INC+0YLQutGA0YvRgtC40Lgg0LzQvtC00LDQu9GM0L3QvtCz0L4g0L7QutC90LAgKNC60L7QvdGC0LXQvdGC0LAg0LLQvdGD0YLRgNC4INC+0LHQvtC70L7Rh9C60LgpLCDQv9C+INGD0LzQvtC70YfQsNC90LjRjiAnZmFkZSdcclxuXHJcbmNvbnN0IG1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsLW92ZXJsYXknKTtcclxuY29uc3QgbW9kYWxCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1idG5dJyk7XHJcbmNvbnN0IG9wZW5XaW5kb3dzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtbW9kYWxdJyk7XHJcbmNvbnN0IGZpeEJsb2NrcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5ibG9jay1maXggJyk7XHJcbmNvbnN0IGZpeFNtYWxsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNtYWxsLWZpeCcpO1xyXG5jb25zdCBtb2RhbFNjcm9sbCA9IHdpbmRvdy5pbm5lcldpZHRoIC0gZG9jdW1lbnQuYm9keS5vZmZzZXRXaWR0aDtcclxuY29uc3QgZm9jdXNFbGVtZW50cyA9IFtcclxuXHQnYVtocmVmXScsXHJcblx0J2lucHV0JyxcclxuXHQnc2VsZWN0JyxcclxuXHQndGV4dGFyZWEnLFxyXG5cdCdidXR0b24nLFxyXG5cdCdpZnJhbWUnLFxyXG5cdCdbY29udGVudGVkaXRhYmxlXScsXHJcblx0J1t0YWJpbmRleF06bm90KFt0YWJpbmRleF49XCItXCJdKSdcclxuXTtcclxubGV0IG1vZGFsQ29udGVudDtcclxubGV0IGxhc3RGb2N1cyA9IGZhbHNlO1xyXG5sZXQgc3BlZWRUaW1lID0gNTAwO1xyXG4vLyBsZXQgbW9kYWxBbmltYXRpb24gPSAnZmFkZSc7XHJcbmlmIChtb2RhbCkge1xyXG5cdG1vZGFsQnRuLmZvckVhY2goZnVuY3Rpb24oaXRlbSkge1xyXG5cdFx0aXRlbS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHtcclxuXHRcdFx0bGV0IHRhcmdldCA9IGUuY3VycmVudFRhcmdldDtcclxuXHRcdFx0aWYgKHRhcmdldCkge1xyXG5cdFx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcclxuXHRcdFx0XHRsZXQgbW9kYWxOYW1lID0gdGFyZ2V0LmRhdGFzZXQuYnRuO1xyXG5cdFx0XHRcdG1vZGFsQ29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke21vZGFsTmFtZX1gKTtcclxuXHRcdFx0XHQvLyDRgdC60L7RgNC+0YHRgtGMINC4INCw0L3QuNC80LDRhtC40Y8gLSDQtdGB0LvQuCDQtNC+0LHQsNCy0LvQtdC90Ysg0LIg0LDRgNCz0YPQvNC10L3RgiBkYXRhXHJcblx0XHRcdFx0bGV0IHNwZWVkID0gdGFyZ2V0LmRhdGFzZXQuc3BlZWQ7XHJcblx0XHRcdFx0Ly8gbGV0IGFuaW1hdGlvbiA9IHRhcmdldC5kYXRhc2V0LmFuaW1hdGlvbjtcclxuXHRcdFx0XHRzcGVlZFRpbWUgPSBzcGVlZCA/IHBhcnNlSW50KHNwZWVkKSA6IDUwMDtcclxuXHRcdFx0XHQvLyBtb2RhbEFuaW1hdGlvbiA9IGFuaW1hdGlvbiA/IGFuaW1hdGlvbiA6ICdmYWRlJztcclxuXHRcdFx0XHRvcGVuTW9kYWwoKTtcclxuXHJcblx0XHRcdFx0Ly8gdG9kbyDQtdGB0LvQuCDQtdGB0YLRjCDQutC90L7Qv9C60Lgg0LLQvdGD0YLRgNC4INC80L7QtNCw0LvRjNC90L7Qs9C+INC+0LrQvdCwLCDQutC+0YLQvtGA0YvQtSDQvtGC0LrRgNGL0LLQsNGO0YIg0YHQu9C10LTRg9GO0YnQtdC1INC80L7QtNCw0LvRjNC90L7QtSDQvtC60L3QviAoZGF0YS1pbnNpZGUpLCDQv9C10YDQtdC00LDQtdC8INCw0YDQs9GD0LzQtdC90YIgdGFyZ2V0XHJcblx0XHRcdFx0Ly8gb3Blbk1vZGFsKHRhcmdldCk7XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cdH0pO1xyXG5cclxuXHRkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XHJcblx0XHRpZiAoZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdtb2RhbC1vdmVybGF5JykgJiYgZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwiaXMtb3BlblwiKSkge1xyXG5cdFx0XHRjbG9zZU1vZGFsKCk7XHRcdFx0XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnbW9kYWxfX2Nsb3NlJykgJiYgZS50YXJnZXQuY2xvc2VzdCgnLm1vZGFsLW9wZW4nKSkge1xyXG5cdFx0XHRjbG9zZU1vZGFsKCk7XHRcdFx0XHJcblx0XHR9XHJcblx0fSk7XHJcblx0XHJcblxyXG5cdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCAoZSkgPT4ge1xyXG5cdFx0aWYgKGUuY29kZSA9PT0gJ0VzY2FwZScgJiYgbW9kYWwuY2xhc3NMaXN0LmNvbnRhaW5zKFwiaXMtb3BlblwiKSkge1xyXG5cdFx0XHRjbG9zZU1vZGFsKCk7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKGUuY29kZSA9PT0gJ1RhYicgJiYgbW9kYWwuY2xhc3NMaXN0LmNvbnRhaW5zKFwiaXMtb3BlblwiKSkge1xyXG5cdFx0XHRmb2N1c0NhdGNoKGUpO1xyXG5cdFx0fVxyXG5cdH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBvcGVuTW9kYWwoZnVuYykge1xyXG5cdGxhc3RGb2N1cyA9IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7XHJcblx0Ly8gdG9kbyDQtdGB0LvQuCDQtdGB0YLRjCDQutC90L7Qv9C60Lgg0LLQvdGD0YLRgNC4INC80L7QtNCw0LvRjNC90L7Qs9C+INC+0LrQvdCwLCDQutC+0YLQvtGA0YvQtSDQvtGC0LrRgNGL0LLQsNGO0YIg0YHQu9C10LTRg9GO0YnQtdC1INC80L7QtNCw0LvRjNC90L7QtSDQvtC60L3QviAoZGF0YS1pbnNpZGUpLCBsYXN0Rm9jdXMg0L/QvtC70YPRh9Cw0LXQvCDRgtCw0LogKNC+0LHRi9GH0L3Ri9C5INGD0LHRgNCw0YLRjCk6XHJcblx0Ly8gaWYgKCFidG4uY2xvc2VzdChgW2RhdGEtaW5zaWRlXWApKSB7XHJcblx0Ly8gXHRsYXN0Rm9jdXMgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xyXG5cdC8vIH1cclxuXHJcblx0b3BlbldpbmRvd3MuZm9yRWFjaChpdGVtID0+IHtcclxuXHRcdGl0ZW0uY2xhc3NMaXN0LnJlbW92ZSgnbW9kYWwtb3BlbicpO1xyXG5cdFx0aXRlbS5zZXRBdHRyaWJ1dGUoJ2FyaWEtaGlkZGVuJywgdHJ1ZSk7XHJcblx0XHQvLyBpdGVtLmNsYXNzTGlzdC5yZW1vdmUoJ2FuaW1hdGUtb3BlbicpO1xyXG5cdFx0Ly8gaXRlbS5jbGFzc0xpc3QucmVtb3ZlKG1vZGFsQW5pbWF0aW9uKTtcclxuXHR9KTtcclxuXHJcblx0aWYgKCFtb2RhbC5jbGFzc0xpc3QuY29udGFpbnMoJ2lzLW9wZW4nKSl7XHJcblx0XHRkaXNhYmxlU2Nyb2xsKCk7XHJcblx0fVxyXG5cclxuXHRpZiAoZnVuYyAmJiBtb2RhbENvbnRlbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdtb2RhbC1wcm9kJykpIHtcclxuXHRcdGZ1bmMoKTtcclxuXHR9XHJcblxyXG5cdG1vZGFsLmNsYXNzTGlzdC5hZGQoJ2lzLW9wZW4nKTtcclxuXHRtb2RhbC5zZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JywgJzAnKTtcclxuXHJcblx0ZG9jdW1lbnQuYm9keS5zdHlsZS5wYWRkaW5nUmlnaHQgPSBgJHttb2RhbFNjcm9sbH1weGA7XHJcblx0aWYgKGZpeEJsb2Nrcy5sZW5ndGggPiAwKSB7XHJcblx0XHRmaXhCbG9ja3MuZm9yRWFjaChpdGVtID0+IHtcclxuXHRcdFx0aXRlbS5zdHlsZS5wYWRkaW5nUmlnaHQgPSBgJHttb2RhbFNjcm9sbH1weGA7XHJcblx0XHR9KVxyXG5cdH1cclxuXHRpZiAoZml4U21hbGwubGVuZ3RoID4gMCkge1xyXG5cdFx0Zml4U21hbGwuZm9yRWFjaChpdGVtID0+IHtcclxuXHRcdFx0aXRlbS5zdHlsZS5tYXJnaW5SaWdodCA9IGAke21vZGFsU2Nyb2xsfXB4YDtcclxuXHRcdH0pXHJcblx0fVxyXG5cclxuXHRtb2RhbENvbnRlbnQuY2xhc3NMaXN0LmFkZCgnbW9kYWwtb3BlbicpO1xyXG5cdG1vZGFsQ29udGVudC5zZXRBdHRyaWJ1dGUoJ2FyaWEtaGlkZGVuJywgZmFsc2UpO1xyXG5cdC8vIG1vZGFsQ29udGVudC5jbGFzc0xpc3QuYWRkKG1vZGFsQW5pbWF0aW9uKTtcclxuXHJcblx0c2V0VGltZW91dCgoKSA9PiB7XHJcblx0XHQvLyBtb2RhbENvbnRlbnQuY2xhc3NMaXN0LmFkZCgnYW5pbWF0ZS1vcGVuJyk7XHJcblx0XHRmb2N1c1RyYXAoKTtcclxuXHR9LCBzcGVlZFRpbWUpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjbG9zZU1vZGFsKCkge1xyXG5cdG9wZW5XaW5kb3dzLmZvckVhY2goaXRlbSA9PiB7XHJcblx0XHRpdGVtLmNsYXNzTGlzdC5yZW1vdmUoJ21vZGFsLW9wZW4nKTtcclxuXHRcdGl0ZW0uc2V0QXR0cmlidXRlKCdhcmlhLWhpZGRlbicsIHRydWUpO1xyXG5cdFx0Ly8gaXRlbS5jbGFzc0xpc3QucmVtb3ZlKCdhbmltYXRlLW9wZW4nKTtcclxuXHRcdC8vIGl0ZW0uY2xhc3NMaXN0LnJlbW92ZShtb2RhbEFuaW1hdGlvbik7XHJcblx0fSk7XHJcblxyXG5cdGVuYWJsZVNjcm9sbCgpO1xyXG5cclxuXHRkb2N1bWVudC5ib2R5LnN0eWxlLnBhZGRpbmdSaWdodCA9IGAwcHhgO1xyXG5cdGlmIChmaXhCbG9ja3MubGVuZ3RoID4gMCkge1xyXG5cdFx0Zml4QmxvY2tzLmZvckVhY2goaXRlbSA9PiB7XHJcblx0XHRcdGl0ZW0uc3R5bGUucGFkZGluZ1JpZ2h0ID0gYDBweGA7XHJcblx0XHR9KVxyXG5cdH1cclxuXHRpZiAoZml4U21hbGwubGVuZ3RoID4gMCkge1xyXG5cdFx0Zml4U21hbGwuZm9yRWFjaChpdGVtID0+IHtcclxuXHRcdFx0aXRlbS5zdHlsZS5tYXJnaW5SaWdodCA9IGAwcHhgO1xyXG5cdFx0fSlcclxuXHR9XHJcblxyXG5cdG1vZGFsLmNsYXNzTGlzdC5yZW1vdmUoJ2lzLW9wZW4nKTtcclxuXHRtb2RhbC5zZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JywgJy0xJyk7XHJcblxyXG5cdGZvY3VzVHJhcCgpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBmb2N1c1RyYXAoKSB7XHJcblx0Ly8gY29uc3Qgbm9kZXMgPSB0aGlzLm1vZGFsQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5fZm9jdXNFbGVtZW50cyk7IC8vKiDQtNC70Y8g0YTQvtC60YPRgdCwINC90LAg0L/QtdGA0LLQvtC8INGN0LvQtdC80LXQvdGC0LUg0L7QutC90LBcclxuXHRpZiAobW9kYWwuY2xhc3NMaXN0LmNvbnRhaW5zKFwiaXMtb3BlblwiKSkge1xyXG5cdFx0bW9kYWwuZm9jdXMoKTtcclxuXHRcdC8vIGlmIChub2Rlcy5sZW5ndGgpIG5vZGVzWzBdLmZvY3VzKCk7IC8vKiDQtNC70Y8g0YTQvtC60YPRgdCwINC90LAg0L/QtdGA0LLQvtC8INGN0LvQtdC80LXQvdGC0LUg0L7QutC90LBcclxuXHR9IGVsc2Uge1xyXG5cdFx0bGFzdEZvY3VzLmZvY3VzKCk7XHRcclxuXHR9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGZvY3VzQ2F0Y2goZSkge1xyXG5cdGNvbnN0IGZvY3VzYWJsZSA9IG1vZGFsQ29udGVudC5xdWVyeVNlbGVjdG9yQWxsKGZvY3VzRWxlbWVudHMpO1xyXG5cdGNvbnN0IGZvY3VzQXJyYXkgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmb2N1c2FibGUpO1xyXG5cdGNvbnN0IGZvY3VzZWRJbmRleCA9IGZvY3VzQXJyYXkuaW5kZXhPZihkb2N1bWVudC5hY3RpdmVFbGVtZW50KTtcclxuXHJcblx0aWYgKGUuc2hpZnRLZXkgJiYgZm9jdXNlZEluZGV4ID09PSAwKSB7XHJcblx0XHRmb2N1c0FycmF5W2ZvY3VzQXJyYXkubGVuZ3RoIC0gMV0uZm9jdXMoKTtcclxuXHRcdGUucHJldmVudERlZmF1bHQoKTtcclxuXHR9XHJcblxyXG5cdGlmICghZS5zaGlmdEtleSAmJiBmb2N1c2VkSW5kZXggPT09IGZvY3VzQXJyYXkubGVuZ3RoIC0gMSkge1xyXG5cdFx0Zm9jdXNBcnJheVswXS5mb2N1cygpO1xyXG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdH1cclxufSIsImNvbnN0IG1vZGFsU2xpZGVyID0gZnVuY3Rpb24oKSB7XHJcblx0Y29uc3QgbWluU2xpZGVyID0gbmV3IFN3aXBlcignLnNsaWRlci1taW4nLCB7XHJcblx0XHRncmFiQ3Vyc29yOiB0cnVlLFxyXG5cdFx0c2xpZGVzUGVyVmlldzogNixcclxuXHRcdGluaXRpYWxTbGlkZTogMCxcclxuXHRcdHNwYWNlQmV0d2VlbjogMjAsXHJcblx0XHRmcmVlTW9kZTogdHJ1ZSxcclxuXHR9KTtcclxuXHRcclxuXHRjb25zdCBtYWluU2xpZGVyID0gbmV3IFN3aXBlcignLnNsaWRlci1tYWluJywge1xyXG5cdFx0Z3JhYkN1cnNvcjogdHJ1ZSxcclxuXHRcdHNwYWNlQmV0d2VlbjogMjAsXHJcblx0XHRzbGlkZXNQZXJWaWV3OiAxLFxyXG5cdFx0aW5pdGlhbFNsaWRlOiAwLFxyXG5cdFx0c2ltdWxhdGVUb3VjaDogZmFsc2UsXHJcblx0XHRlZmZlY3Q6ICdmYWRlJyxcclxuXHRcdGZhZGVFZmZlY3Q6IHtcclxuXHRcdCAgY3Jvc3NGYWRlOiB0cnVlXHJcblx0XHR9LFxyXG5cdFx0dGh1bWJzOiB7XHJcblx0XHRcdHN3aXBlcjogbWluU2xpZGVyLFxyXG5cdFx0fVxyXG5cdH0pO1xyXG59O1xyXG5jb25zdCBjYXRhbG9nUHJvZHVjdHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2F0YWxvZ19fd3JhcCcpO1xyXG5pZiAoY2F0YWxvZ1Byb2R1Y3RzKSB7XHJcblx0Y2F0YWxvZ1Byb2R1Y3RzLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xyXG5cdFx0aWYgKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnbW9kYWwtYnRuJykpIHtcclxuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0XHRtb2RhbENvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubW9kYWwtcHJvZCcpO1xyXG5cdFx0XHRvcGVuTW9kYWwobG9hZE1vZGFsRGF0YSk7XHJcblx0XHR9XHJcblx0fSk7XHJcblx0XHJcblx0Y29uc3QgbG9hZE1vZGFsRGF0YSA9IGFzeW5jIGZ1bmN0aW9uKCkge1xyXG5cdFx0bW9kYWxTbGlkZXIoKTtcclxuXHR9O1xyXG5cclxuXHQvLyog0LTQtdC70LDQtdC8INCy0LjQtNC40LzRi9C80Lgg0LrQvdC+0L/QutC4INGC0L7QstCw0YDQsCDQv9GA0Lgg0YTQvtC60YPRgdC1ICjQv9C+INGD0LzQvtC70YfQsNC90LjRjiDQvtC90Lgg0YHQutGA0YvRgtGLKVxyXG5cdGNvbnN0IHByb2R1Y3RzQnRucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jYXRhbG9nLWl0ZW1fX2J0bicpO1xyXG5cdHByb2R1Y3RzQnRucy5mb3JFYWNoKGVsID0+IHtcclxuXHRcdGVsLmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3VzJywgKGUpID0+IHtcclxuXHRcdFx0bGV0IHBhcmVudCA9IGUuY3VycmVudFRhcmdldC5jbG9zZXN0KCcuY2F0YWxvZy1pdGVtX19idG5zJyk7XHJcblx0XHRcdHBhcmVudC5jbGFzc0xpc3QuYWRkKCdjYXRhbG9nLWl0ZW1fX2J0bnMtLWZvY3VzJyk7XHJcblx0XHR9LCB0cnVlKTtcclxuXHJcblx0XHRlbC5hZGRFdmVudExpc3RlbmVyKCdibHVyJywgKGUpID0+IHtcclxuXHRcdFx0bGV0IHBhcmVudCA9IGUuY3VycmVudFRhcmdldC5jbG9zZXN0KCcuY2F0YWxvZy1pdGVtX19idG5zJyk7XHJcblx0XHRcdHBhcmVudC5jbGFzc0xpc3QucmVtb3ZlKCdjYXRhbG9nLWl0ZW1fX2J0bnMtLWZvY3VzJyk7XHJcblx0XHR9LCB0cnVlKTtcclxuXHR9KTtcclxuXHJcblx0Ly8qINC/0L4g0YLQsNGH0YMg0L/QvtGP0LLQu9GP0Y7RgtGB0Y8g0LrQvdC+0L/QutC4INGC0L7QstCw0YDQsFxyXG5cdGxldCBpc09wZW4gPSBmYWxzZTtcclxuXHRjYXRhbG9nUHJvZHVjdHMuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCBmdW5jdGlvbihlKSB7XHJcblx0XHRpZiAoZS50YXJnZXQuY2xvc2VzdCgnLmNhdGFsb2ctaXRlbV9faW1nJykpIHtcclxuXHRcdFx0bGV0IGJ0bnMgPSBlLnRhcmdldC5jbG9zZXN0KCcuY2F0YWxvZy1pdGVtX19idG5zJyk7XHJcblx0XHRcdGxldCBidG4gPSBidG5zLnF1ZXJ5U2VsZWN0b3JBbGwoJy5jYXRhbG9nLWl0ZW1fX2J0bicpO1xyXG5cdFx0XHRpZiAoIWlzT3Blbikge1xyXG5cdFx0XHRcdGJ0bnMuY2xhc3NMaXN0LmFkZCgnY2F0YWxvZy1pdGVtX19idG5zLS10b3VjaCcpO1xyXG5cdFx0XHRcdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0XHRcdFx0YnRuLmZvckVhY2goZWwgPT4ge1xyXG5cdFx0XHRcdFx0XHRlbC5zdHlsZS5wb2ludGVyRXZlbnRzID0gJ2F1dG8nO1xyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0fSwgMTAwKTtcclxuXHRcdFx0XHRpc09wZW4gPSB0cnVlO1xyXG5cdFx0XHR9IGVsc2UgaWYgKGlzT3BlbiAmJiAhZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdjYXRhbG9nLWl0ZW1fX2J0bicpICYmICFlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ2FkZC10by1jYXJ0LWJ0bicpKSB7XHJcblx0XHRcdFx0YnRucy5jbGFzc0xpc3QucmVtb3ZlKCdjYXRhbG9nLWl0ZW1fX2J0bnMtLXRvdWNoJyk7XHJcblx0XHRcdFx0c2V0VGltZW91dCgoKSA9PiB7XHJcblx0XHRcdFx0XHRidG4uZm9yRWFjaChlbCA9PiB7XHJcblx0XHRcdFx0XHRcdGVsLnN0eWxlLnBvaW50ZXJFdmVudHMgPSAnbm9uZSc7XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHR9LCAxMDApO1xyXG5cdFx0XHRcdGlzT3BlbiA9IGZhbHNlO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fSk7XHJcbn1cclxuXHJcbi8vINGA0LDQsdC+0YLQsCDQvNC40L3QuC3QutC+0YDQt9C40L3Ri1xyXG5jb25zdCBtaW5pQ2FydExpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWluaS1jYXJ0X19saXN0Jyk7XHJcbmNvbnN0IGZ1bGxQcmljZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5taW5pLWNhcnRfX3N1bW0nKTtcclxuY29uc3QgY2FydENvdW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNhcnRfX2NvdW50Jyk7XHJcbmxldCBwcmljZSA9IDA7XHJcblxyXG4vLyDRhNGD0L3QutGG0LjRjyDQstGB0YLQsNCy0LvRj9C10YIg0L/RgNC+0LHQtdC7INC80LXQttC00YMg0YDQsNC30YDRj9C00LDQvNC4XHJcbmNvbnN0IG5vcm1hbFByaWNlID0gKHN0cikgPT4ge1xyXG5cdHJldHVybiBTdHJpbmcoc3RyKS5yZXBsYWNlKC8oXFxkKSg/PShcXGRcXGRcXGQpKyhbXlxcZF18JCkpL2csICckMSAnKTtcclxufTtcclxuLy8g0YTRg9C90LrRhtC40Y8g0YPQtNCw0LvRj9C10YIg0L/RgNC+0LHQtdC7INC80LXQttC00YMg0YDQsNC30YDRj9C00LDQvNC4XHJcbmNvbnN0IHByaWNlV2l0aG91dFNwYWNlcyA9IChzdHIpID0+IHtcclxuXHRyZXR1cm4gc3RyLnJlcGxhY2UoL1xccy9nLCAnJyk7XHJcbn07XHJcblxyXG5jb25zdCBjcmVhdGVDYXJ0ID0gZnVuY3Rpb24gKCkge1xyXG5cdG1pbmlDYXJ0TGlzdC5pbnNlcnRBZGphY2VudEhUTUwoJ2FmdGVyYmVnaW4nLCBgXHJcblx0XHQ8bGkgY2xhc3M9XCJtaW5pLWNhcnRfX2l0ZW1cIj5cclxuXHRcdFx0PGRpdiBjbGFzcz1cIm1pbmktY2FydF9faW1hZ2VcIj5cclxuXHRcdFx0XHQ8aW1nIHNyYz1cImltZy9pbWFnZS5qcGdcIiBhbHQ9XCLQuNC30L7QsdGA0LDQttC10L3QuNC1XCIgd2lkdGg9XCIxMDBcIiBoZWlnaHQ9XCIxMDBcIj5cclxuXHRcdFx0PC9kaXY+XHJcblx0XHRcdDxkaXYgY2xhc3M9XCJtaW5pLWNhcnRfX2NvbnRlbnRcIj5cclxuXHRcdFx0XHQ8aDMgY2xhc3M9XCJtaW5pLWNhcnRfX3RpdGxlXCI+0JrRgNC+0YHRgdC+0LLQutC4IE5pa2UgQWlyIEZvcmNlIDEgJzA3IFFTPC9oMz5cclxuXHRcdFx0XHQ8c3BhbiBjbGFzcz1cIm1pbmktY2FydF9fcHJpY2VcIj4xMSAwMDAg0YA8L3NwYW4+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8YnV0dG9uIGNsYXNzPVwibWluaS1jYXJ0X19kZWxldGUgYnRuLXJlc2V0XCI+PC9idXR0b24+XHJcblx0XHQ8L2xpPlxyXG5cdGApO1xyXG5cclxuXHRwcmljZSArPSAxMTAwMDtcclxuXHRmdWxsUHJpY2UudGV4dENvbnRlbnQgPSBgJHtub3JtYWxQcmljZShwcmljZSl9INGAYDtcclxuXHJcblx0Ly8g0L/QvtC70YPRh9Cw0LXQvCDQutC+0LvQuNGH0LXRgdGC0LLQviDRgtC+0LLQsNGA0LAsINC00L7QsdCw0LLQu9GP0LXQvCDQtdCz0L4g0LIg0L/QvtC60LDQt9Cw0LXQu9GMINC60L7Qu9C40YfQtdGB0YLQstCwINC4INC00LXQu9Cw0LXQvCDQsNC60YLQuNCy0L3Ri9C8INC60YDRg9C20L7Rh9C10Log0YEg0LrQvtC70LjRh9C10YHRgtCy0L7QvFxyXG5cdGxldCBudW0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubWluaS1jYXJ0X19pdGVtJykubGVuZ3RoO1xyXG5cdGlmIChudW0gPiAwKSB7XHJcblx0XHRjYXJ0Q291bnQuY2xhc3NMaXN0LmFkZCgnY2FydF9fY291bnQtLWFjdGl2ZScpO1xyXG5cdH1cclxuXHRjYXJ0Q291bnQudGV4dENvbnRlbnQgPSBudW07XHJcblx0Ly8g0LTQtdC70LDQtdC8INC30L3QsNGH0LXQuiDQutC+0YDQt9C40L3RiyDQtNC+0YHRgtGD0L/QvdGL0Lwg0LTQu9GPINC60LvQuNC60LBcclxuXHRkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2FydCcpLnJlbW92ZUF0dHJpYnV0ZSgnZGlzYWJsZWQnKTtcclxufVxyXG5cclxuLy8g0L/RgNC4INC90LDQttCw0YLQuNC4INC90LAg0LrQvdC+0L/QutGDIFwi0LTQvtCx0LDQstC40YLRjCDQsiDQutC+0YDQt9C40L3Rg1wiIC0g0YLQvtCy0LDRgCDQtNC+0LHQsNCy0LvRj9C10YLRgdGPINCyINC60L7RgNC30LjQvdGDXHJcbmNhdGFsb2dQcm9kdWN0cy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XHJcblx0aWYgKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnYWRkLXRvLWNhcnQtYnRuJykpIHtcclxuXHRcdGNyZWF0ZUNhcnQoKTtcclxuXHR9XHJcbn0pO1xyXG5cclxuLy8g0L/RgNC4INC90LDQttCw0YLQuNC4INC90LAg0LrQvdC+0L/QutGDIFwi0LfQsNC60LDQt9Cw0YLRjFwiINCyINC80L7QtNCw0LvRjNC90L7QvCDQvtC60L3QtSDQutC+0YDQt9C40L3RiyAtINGC0L7QstCw0YAg0LTQvtCx0LDQstC70Y/QtdGC0YHRjyDQsiDQutC+0YDQt9C40L3Rg1xyXG5jb25zdCBtb2RhbE9yZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsLWluZm9fX29yZGVyJyk7XHJcbm1vZGFsT3JkZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xyXG5cdGNyZWF0ZUNhcnQoKTtcclxufSk7XHJcblxyXG4vLyDQutC90L7Qv9C60Lgg0YDQsNC30LzQtdGA0LAg0LIg0LzQvtC00LDQu9GM0L3QvtC8INC+0LrQvdC1XHJcbmNvbnN0IG1vZGFsU2l6ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5tb2RhbC1pbmZvX19zaXplJyk7XHJcbm1vZGFsU2l6ZS5mb3JFYWNoKGZ1bmN0aW9uKGVsKSB7XHJcblx0ZWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihlKSB7XHJcblx0XHRsZXQgc2VsZiA9IGUuY3VycmVudFRhcmdldDtcclxuXHRcdGVsLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcjYjJiNWJiJztcclxuXHRcdG1vZGFsU2l6ZS5mb3JFYWNoKGJ0biA9PiB7XHJcblx0XHRcdGlmIChidG4gIT09IHNlbGYpIHtcclxuXHRcdFx0XHRidG4uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJ3RyYW5zcGFyZW50JztcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0fSk7XHJcbn0pO1xyXG5cclxubWluaUNhcnRMaXN0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcclxuXHQvLyDQv9GA0Lgg0LrQu9C40LrQtSDQvdCwINC60L3QvtC/0LrRgyBcItGD0LTQsNC70LjRgtGMINGC0L7QstCw0YAg0LjQtyDQutC+0YDQt9C40L3Ri1wiINGD0LTQsNC70Y/QtdC8INC10LTQuNC90LjRhtGDINGC0L7QstCw0YDQsCwg0LzQtdC90Y/QtdC8INGB0YPQvNC80YMg0Lgg0LrQvtC70LjRh9C10YHRgtCy0L5cclxuXHRpZiAoZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdtaW5pLWNhcnRfX2RlbGV0ZScpKSB7XHJcblx0XHRjb25zdCBzZWxmID0gZS50YXJnZXQ7XHJcblx0XHRjb25zdCBwYXJlbnQgPSBzZWxmLmNsb3Nlc3QoJy5taW5pLWNhcnRfX2l0ZW0nKTtcclxuXHRcdHBhcmVudC5yZW1vdmUoKTtcclxuXHRcdHByaWNlIC09IDExMDAwO1xyXG5cdFx0ZnVsbFByaWNlLnRleHRDb250ZW50ID0gYCR7bm9ybWFsUHJpY2UocHJpY2UpfSDRgGA7XHJcblx0XHRsZXQgbnVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLm1pbmktY2FydF9fbGlzdCAubWluaS1jYXJ0X19pdGVtJykubGVuZ3RoO1xyXG5cdFx0aWYgKG51bSA9PSAwKSB7XHJcblx0XHRcdGNhcnRDb3VudC5jbGFzc0xpc3QucmVtb3ZlKCdjYXJ0X19jb3VudC0tYWN0aXZlJyk7XHJcblx0XHRcdG1pbmlDYXJ0LmNsYXNzTGlzdC5yZW1vdmUoJ21pbmktY2FydC0tb3BlbicpO1xyXG5cdFx0XHRkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2FydCcpLnNldEF0dHJpYnV0ZShcImRpc2FibGVkXCIsIFwiZGlzYWJsZWRcIik7XHJcblx0XHR9XHJcblx0XHRjYXJ0Q291bnQudGV4dENvbnRlbnQgPSBudW07XHJcblxyXG5cdH0gZWxzZSBpZiAoZS50YXJnZXQuY2xvc2VzdCgnLm1pbmktY2FydF9faXRlbScpKSB7XHJcblx0XHQvLyDQstGL0LTQtdC70Y/QtdC8INGC0L7QstCw0YDRiyDQsiDQutC+0YDQt9C40L3QtSDQv9GA0Lgg0LrQu9C40LrQtSDQvdCwINC90LjRhVxyXG5cdFx0Y29uc3QgcGFyZW50ID0gZS50YXJnZXQuY2xvc2VzdCgnLm1pbmktY2FydF9faXRlbScpO1xyXG5cdFx0Y29uc3QgY2FydEl0ZW1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLm1pbmktY2FydF9fbGlzdCAubWluaS1jYXJ0X19pdGVtJyk7XHJcblx0XHRjYXJ0SXRlbXMuZm9yRWFjaChidG4gPT4ge1xyXG5cdFx0XHRpZiAoIWJ0bi5jb250YWlucyhlLnRhcmdldCkpIHtcclxuXHRcdFx0XHRidG4uY2xhc3NMaXN0LnJlbW92ZSgnbWluaS1jYXJ0X19pdGVtLS1hY3RpdmUnKTtcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHRcclxuXHRcdHBhcmVudC5jbGFzc0xpc3QuYWRkKCdtaW5pLWNhcnRfX2l0ZW0tLWFjdGl2ZScpO1xyXG5cdH1cclxufSk7XHJcblxyXG4vLyog0YDQsNCx0L7RgtCwINC60L7RgNC30LjQvdGLINCyINC80L7QtNCw0LvRjNC90L7QvCDQvtC60L3QtVxyXG5jb25zdCBvcGVuT3JkZXJNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5taW5pLWNhcnRfX2J0bicpO1xyXG5jb25zdCBvcmRlck1vZGFsTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbC1jYXJ0LW9yZGVyX19saXN0Jyk7XHJcbmNvbnN0IG9yZGVyTW9kYWxRdWFudGl0eSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbC1jYXJ0LW9yZGVyX19xdWFudGl0eSBzcGFuJyk7XHJcbmNvbnN0IG9yZGVyTW9kYWxTdW1tID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsLWNhcnQtb3JkZXJfX3N1bW0gc3BhbicpO1xyXG5jb25zdCBvcmRlck1vZGFsU2hvdyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbC1jYXJ0LW9yZGVyX19zaG93Jyk7XHJcblxyXG4vLyDQv9GA0Lgg0LrQu9C40LrQtSDQvdCwINC60L3QvtC/0LrRgyBcItC/0LXRgNC10LnRgtC4INCyINC60L7RgNC30LjQvdGDXCIg0LzQvtC00LDQu9GM0L3QvtC1INC+0LrQvdC+INC60L7RgNC30LjQvdGLINC30LDQv9C+0LvQvdGP0LXRgtGB0Y8g0YLQvtCy0LDRgNC+0Lwg0LjQtyDQvNC40L3QuC3QutC+0YDQt9C40L3Ri1xyXG5vcGVuT3JkZXJNb2RhbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuXHRjb25zdCBwcm9kdWN0c01pbmlDYXJ0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLm1pbmktY2FydF9faXRlbScpO1xyXG5cdGNvbnN0IHByb2R1Y3RzUXVhbnRpdHkgPSBwcm9kdWN0c01pbmlDYXJ0Lmxlbmd0aDtcclxuXHRvcmRlck1vZGFsTGlzdC5pbm5lckhUTUwgPSAnJztcclxuXHRwcm9kdWN0c01pbmlDYXJ0LmZvckVhY2goZnVuY3Rpb24oZWwpIHtcclxuXHRcdG1vZGFsQ2FydExvYWQoKTtcclxuXHR9KTtcclxuXHJcblx0ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsLWNhcnQtZm9ybV9fc3VibWl0JykucmVtb3ZlQXR0cmlidXRlKFwiZGlzYWJsZWRcIiwgXCJkaXNhYmxlZFwiKTtcclxuXHJcblx0b3JkZXJNb2RhbFF1YW50aXR5LnRleHRDb250ZW50ID0gYCR7cHJvZHVjdHNRdWFudGl0eX0g0YjRgmA7XHJcblx0b3JkZXJNb2RhbFN1bW0udGV4dENvbnRlbnQgPSBmdWxsUHJpY2UudGV4dENvbnRlbnQ7XHJcbn0pO1xyXG5cclxuLy8g0YTRg9C90LrRhtC40Y8g0LfQsNC/0L7Qu9C90LXQvdC40Y8g0LzQvtC00LDQu9GM0L3QvtCz0L4g0L7QutC90LAg0YLQvtCy0LDRgNC+0LzQuCDQuNC3INC80LjQvdC4LdC60L7RgNC30LjQvdGLXHJcbmNvbnN0IG1vZGFsQ2FydExvYWQgPSAoKSA9PiB7XHJcblx0b3JkZXJNb2RhbExpc3QuaW5zZXJ0QWRqYWNlbnRIVE1MKCdhZnRlcmJlZ2luJywgYFxyXG5cdFx0PGxpIGNsYXNzPVwibW9kYWwtY2FydC1wcm9kdWN0XCI+XHJcblx0XHRcdDxkaXYgY2xhc3M9XCJtb2RhbC1jYXJ0LXByb2R1Y3RfX2ltYWdlXCI+XHJcblx0XHRcdFx0PGltZyBzcmM9XCJpbWcvaW1hZ2UuanBnXCIgYWx0PVwi0LjQt9C+0LHRgNCw0LbQtdC90LjQtVwiIHdpZHRoPVwiODBcIiBoZWlnaHQ9XCI4MFwiPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PGRpdiBjbGFzcz1cIm1vZGFsLWNhcnQtcHJvZHVjdF9fY29udGVudFwiPlxyXG5cdFx0XHRcdDxoMyBjbGFzcz1cIm1vZGFsLWNhcnQtcHJvZHVjdF9fdGl0bGVcIj7QmtGA0L7RgdGB0L7QstC60LggTmlrZSBBaXIgRm9yY2UgMSAnMDcgUVM8L2gzPlxyXG5cdFx0XHRcdDxzcGFuIGNsYXNzPVwibW9kYWwtY2FydC1wcm9kdWN0X19wcmljZVwiPjExIDAwMCBwPC9zcGFuPlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdFx0PGJ1dHRvbiBjbGFzcz1cIm1vZGFsLWNhcnQtcHJvZHVjdF9fZGVsZXRlIGJ0bi1yZXNldFwiPtCj0LTQsNC70LjRgtGMPC9idXR0b24+XHJcblx0XHQ8L2xpPlxyXG5cdGApO1xyXG59O1xyXG5cclxuLy8g0YPQtNCw0LvQtdC90LjQtSDRgtC+0LLQsNGA0L7QsiDQuNC3INC+0LrQvdCwINC60L7RgNC30LjQvdGLXHJcbm9yZGVyTW9kYWxMaXN0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcclxuXHRpZiAoZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdtb2RhbC1jYXJ0LXByb2R1Y3RfX2RlbGV0ZScpKSB7XHJcblx0XHRjb25zdCBzZWxmID0gZS50YXJnZXQ7XHJcblx0XHRjb25zdCBwYXJlbnQgPSBzZWxmLmNsb3Nlc3QoJy5tb2RhbC1jYXJ0LXByb2R1Y3QnKTtcclxuXHRcdC8vIHBhcmVudC5yZW1vdmUoKTtcclxuXHJcblx0XHRjb25zdCBwcm9kdWN0c01pbmlDYXJ0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLm1pbmktY2FydF9faXRlbScpO1xyXG5cdFx0Zm9yIChsZXQgaSA9IDA7IGkgPCBwcm9kdWN0c01pbmlDYXJ0Lmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdGxldCBpdGVtID0gcHJvZHVjdHNNaW5pQ2FydFtpXTtcclxuXHRcdFx0aWYgKGkgPT0gMCkge1xyXG5cdFx0XHRcdGl0ZW0ucmVtb3ZlKCk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdFxyXG5cdFx0cGFyZW50LnN0eWxlLm9wYWNpdHkgPSAnMCc7XHJcblx0XHRzZXRUaW1lb3V0KCgpID0+IHtcclxuXHRcdFx0cGFyZW50LnN0eWxlLm1hcmdpbkJvdHRvbSA9ICcwcHgnO1xyXG5cdFx0XHRwYXJlbnQuc3R5bGUubWF4SGVpZ2h0ID0gJzBweCc7XHJcblx0XHR9LCAxMDApO1xyXG5cclxuXHRcdC8vINC40LfQvNC10L3Rj9C10Lwg0L7QsdGJ0YPRjiDRgdGC0L7QuNC80L7RgdGC0Ywg0YLQvtCy0LDRgNC+0LIg0LIg0L7QutC90LUg0Lgg0LIg0LzQuNC90Lgt0LrQvtGA0LfQuNC90LVcclxuXHRcdHByaWNlIC09IDExMDAwO1xyXG5cdFx0c2V0VGltZW91dCgoKSA9PiB7XHJcblx0XHRcdHBhcmVudC5yZW1vdmUoKTtcclxuXHRcdFx0bGV0IG51bSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5tb2RhbC1jYXJ0LXByb2R1Y3QnKS5sZW5ndGg7XHJcblx0XHRcdGlmIChudW0gPT0gMCkge1xyXG5cdFx0XHRcdGNhcnRDb3VudC5jbGFzc0xpc3QucmVtb3ZlKCdjYXJ0X19jb3VudC0tYWN0aXZlJyk7XHJcblx0XHRcdFx0ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNhcnQnKS5zZXRBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiLCBcImRpc2FibGVkXCIpO1xyXG5cdFx0XHRcdGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbC1jYXJ0LWZvcm1fX3N1Ym1pdCcpLnNldEF0dHJpYnV0ZShcImRpc2FibGVkXCIsIFwiZGlzYWJsZWRcIik7XHJcblx0XHRcdFx0b3JkZXJNb2RhbFNob3cuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcblx0XHRcdH1cclxuXHRcdFx0Y2FydENvdW50LnRleHRDb250ZW50ID0gbnVtOyBcclxuXHRcdFx0b3JkZXJNb2RhbFN1bW0udGV4dENvbnRlbnQgPSBgJHtub3JtYWxQcmljZShwcmljZSl9INGAYDtcclxuXHRcdFx0b3JkZXJNb2RhbFF1YW50aXR5LnRleHRDb250ZW50ID0gYCR7bnVtfSDRiNGCYDtcclxuXHRcdFx0ZnVsbFByaWNlLnRleHRDb250ZW50ID0gYCR7bm9ybWFsUHJpY2UocHJpY2UpfSDRgGA7XHJcblx0XHR9LCAzMDApO1xyXG5cclxuXHJcblx0fVxyXG59KTtcclxuXHJcbi8vINC+0YfQuNGJ0LXQvdC40LUg0LrQvtGA0LfQuNC90Ysg0L/QvtGB0LvQtSDQvdCw0LbQsNGC0LjRjyDQutC90L7Qv9C60LggXCLQt9Cw0LrQsNC30LDRgtGMXCIgKNC40YHQv9C+0LvRjNC30YPQtdGC0YHRjyDQsiDRhNC+0YDQvNC1INC30LDQutCw0LfQsClcclxuZnVuY3Rpb24gYWxsRGVsKCkge1xyXG5cdG9yZGVyTW9kYWxTaG93LmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG5cdG9yZGVyTW9kYWxMaXN0LmhpZGRlbiA9IHRydWU7XHJcblxyXG5cdG9yZGVyTW9kYWxTdW1tLnRleHRDb250ZW50ID0gJzAg0YAnO1xyXG5cdG9yZGVyTW9kYWxRdWFudGl0eS50ZXh0Q29udGVudCA9ICcwINGI0YInO1xyXG5cdGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbC1jYXJ0LWZvcm1fX3N1Ym1pdCcpLnNldEF0dHJpYnV0ZShcImRpc2FibGVkXCIsIFwiZGlzYWJsZWRcIik7XHJcblxyXG5cdGxldCBwcm9kdWN0cyA9ICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubW9kYWwtY2FydC1wcm9kdWN0Jyk7XHJcblx0cHJvZHVjdHMuZm9yRWFjaChmdW5jdGlvbihlbCkge1xyXG5cdFx0ZWwucmVtb3ZlKCk7XHJcblx0fSk7XHJcblxyXG5cdGNhcnRDb3VudC5jbGFzc0xpc3QucmVtb3ZlKCdjYXJ0X19jb3VudC0tYWN0aXZlJyk7XHJcblx0Y2FydENvdW50LnRleHRDb250ZW50ID0gJzAnO1xyXG5cdGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJ0Jykuc2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIiwgXCJkaXNhYmxlZFwiKTsgXHJcblxyXG5cdGxldCBtaW5pQ2FydEl0ZW1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLm1pbmktY2FydF9faXRlbScpO1xyXG5cdG1pbmlDYXJ0SXRlbXMuZm9yRWFjaChmdW5jdGlvbihlbCkge1xyXG5cdFx0ZWwucmVtb3ZlKCk7XHJcblx0fSk7XHJcblx0ZnVsbFByaWNlLnRleHRDb250ZW50ID0gJzAg0YAnO1xyXG5cdHByaWNlID0gIDA7XHJcbn1cclxuIiwiY29uc3QgcXVpekZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucXVpei1mb3JtJyk7XHJcbmNvbnN0IHF1aXpJbnB1dHMgPSBxdWl6Rm9ybS5xdWVyeVNlbGVjdG9yQWxsKCdpbnB1dCcpO1xyXG5jb25zdCBxdWl6QmxvY2tzID0gcXVpekZvcm0ucXVlcnlTZWxlY3RvckFsbCgnLnF1aXotYmxvY2snKTtcclxuXHJcbmxldCB0ZXh0YXJlYVRleHQgPSBudWxsO1xyXG5sZXQgcXVpelJlcGx5ICA9IHt9O1xyXG5sZXQgYmxvY2tJbmRleCA9IDA7XHJcblxyXG4vLyDRhNGD0L3QutGG0LjRjyDQv9C+0LrQsNC30LAg0YLQvtC70YzQutC+INC/0LXRgNCy0L7Qs9C+INCx0LvQvtC60LAg0LrQstC40LfQsFxyXG5zaG93QmxvY2tzKGJsb2NrSW5kZXgpO1xyXG5cclxuZnVuY3Rpb24gc2hvd0Jsb2NrcygpIHtcclxuXHRxdWl6QmxvY2tzLmZvckVhY2goKGl0ZW0pID0+IGl0ZW0uc3R5bGUuZGlzcGxheSA9ICdub25lJyk7XHJcblx0cXVpekJsb2Nrc1tibG9ja0luZGV4XS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcclxuXHRxdWl6QmxvY2tzW2Jsb2NrSW5kZXhdLmNsYXNzTGlzdC5hZGQoJ2ZhZGVJbicpO1xyXG59XHJcblxyXG4vLyDQt9Cw0L/QuNGB0Ywg0L3QsNC30LLQsNC90LjRjyDRh9C10LrQsdC+0LrRgdCwINCyIHZhbHVlINC40L3Qv9GD0YLQsCDRh9C10LrQsdC+0LrRgdCwXHJcbnF1aXpJbnB1dHMuZm9yRWFjaChpbnB1dCA9PiB7XHJcblx0aWYgKGlucHV0LnR5cGUgPT0gJ2NoZWNrYm94JyB8fCBpbnB1dC50eXBlID09ICdyYWRpbycpIHtcclxuXHRcdGlucHV0LnZhbHVlID0gaW5wdXQubmV4dEVsZW1lbnRTaWJsaW5nLnRleHRDb250ZW50O1xyXG5cdH1cclxufSk7XHJcblxyXG5xdWl6Rm9ybS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XHJcblx0bGV0IHRhcmdldCA9IGUudGFyZ2V0O1xyXG5cdGxldCBibG9jayA9IHRhcmdldC5jbG9zZXN0KCcucXVpei1ibG9jaycpO1xyXG5cdGxldCBuZXh0QnRuID0gcXVpekZvcm0ucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtbmV4dF0nKTtcclxuXHRuZXh0QnRuLmZvckVhY2goYnRuID0+IHtcclxuXHRcdGlmICh0YXJnZXQgPT0gYnRuKSB7XHJcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcclxuXHRcdFx0YWRkVG9TZW5kKGJsb2NrLCBxdWl6UmVwbHkpO1xyXG5cdFx0XHRuZXh0UXVlc3Rpb24oYmxvY2spO1xyXG5cdFx0fVxyXG5cdH0pO1xyXG5cdGlmICh0YXJnZXQgPT0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtc2VuZF0nKSkge1xyXG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0YWRkVG9TZW5kKGJsb2NrLCBxdWl6UmVwbHkpO1xyXG5cdFx0c2VuZChibG9jayk7XHJcblx0fVxyXG59KTtcclxuXHJcbmZ1bmN0aW9uIG5leHRRdWVzdGlvbihmb3JtKSB7XHJcblx0bGV0IHZhbGlkID0gdmFsaWRJbnB1dChmb3JtKTtcclxuXHRpZiAodmFsaWQgPT09IDAgJiYgdmFsaWRDaGVjayhmb3JtKSkge1xyXG5cdFx0c2hvd0Jsb2NrcyhibG9ja0luZGV4ICs9IDEpO1xyXG5cdH1cclxufVxyXG5cclxuZnVuY3Rpb24gc2VuZChmb3JtKSB7XHJcblx0bGV0IHZhbGlkID0gdmFsaWRJbnB1dChmb3JtKTtcclxuXHRpZiAodmFsaWQgPT09IDAgJiYgdmFsaWRDaGVjayhmb3JtKSkge1xyXG5cdFx0Zm9ybVJlbW92ZUVycm9yKHF1aXpGb3JtKTtcclxuXHJcblx0XHQvLyogPT09PT09PT0g0KHQvtC+0LHRidC10L3QuNC1INC+0LEg0L7RgtC/0YDQsNCy0LrQtSA9PT09PT09PT09PT1cclxuXHRcdGxldCBvayA9IGZvcm0ucXVlcnlTZWxlY3RvcignLnF1aXotc2VuZF9fb2snKTtcclxuXHRcdGxldCB0ZXh0TWVzc2FnZSA9IGZvcm0ucXVlcnlTZWxlY3RvcignLnF1aXotbWVzc2FnZScpO1xyXG5cdFx0aWYgKHRleHRNZXNzYWdlKSB7XHJcblx0XHRcdHRleHRNZXNzYWdlLnRleHRDb250ZW50ID0gJ9CX0LDQs9GA0YPQt9C60LAuLi4nO1xyXG5cdFx0XHR0ZXh0TWVzc2FnZS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyo9PT09PT09PT0gRm9ybURhdGEgPT09PT09PT09PT09PT09XHJcblx0XHRjb25zdCBxdWl6Rm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTtcclxuXHRcdGZvciAobGV0IGtleSBpbiBxdWl6UmVwbHkpIHtcclxuXHRcdFx0cXVpekZvcm1EYXRhLmFwcGVuZChrZXksIHF1aXpSZXBseVtrZXldKTtcclxuXHRcdH1cclxuXHRcdC8vIGZvcm1EYXRhLmFwcGVuZCgnaW1hZ2UnLCBmb3JtSW1hZ2UuZmlsZXNbMF0pO1xyXG5cdFx0Ly8qINCf0YDQvtCy0LXRgNC60LAgRm9ybURhdGFcclxuXHRcdC8vIGZvcih2YXIgcGFpciBvZiBxdWl6Rm9ybURhdGEuZW50cmllcygpKSB7XHJcblx0XHQvLyBcdGNvbnNvbGUubG9nKHBhaXJbMF0rICc6ICcrIHBhaXJbMV0pO1xyXG5cdFx0Ly8gfVxyXG5cclxuXHRcdC8vKj09PT09PT09PSDQntGC0L/RgNCw0LLQutCwINC00LDQvdC90YvRhSA9PT09PT09PT09PT09PT1cclxuXHRcdGNvbnN0IHF1aXpEYXRhID0gYXN5bmMgKHVybCwgZGF0YSkgPT4ge1xyXG5cdFx0XHRsZXQgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIHtcclxuXHRcdFx0XHRtZXRob2Q6IFwiUE9TVFwiLFxyXG5cdFx0XHRcdGJvZHk6IGRhdGFcclxuXHRcdFx0fSk7XHRcclxuXHRcdFx0aWYgKHJlc3BvbnNlLm9rKSB7XHJcblxyXG5cdFx0XHRcdC8vIGxldCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7IC8vIGpzb24oKSAtINC00LvRjyDQstGL0LLQvtC00LAg0YHQvtC+0LHRidC10L3QuNGPO1xyXG5cdFx0XHRcdC8vIGFsZXJ0KHJlc3VsdC5tZXNzYWdlKTtcclxuXHJcblx0XHRcdFx0bGV0IHJlc3VsdCA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKTsgLy8gdGV4dCgpIC0g0LTQu9GPINC/0YDQvtCy0LXRgNC60Lgg0L3QsCDRgdC10YDQstC10YDQtSwg0L/QvtC00LrQu9GO0YfQuNGC0Ywgc2VydmVyLnBocClcclxuXHRcdFx0XHQvLyBjb25zb2xlLmxvZyhyZXN1bHQpOyAvLyDRjdGC0L4g0LTQu9GPINC/0YDQvtCy0LXRgNC60Lgg0L3QsCDRgdC10YDQstC10YDQtVxyXG5cclxuXHRcdFx0XHQvLyBpZiAodGV4dE1lc3NhZ2UpIHtcclxuXHRcdFx0XHQvLyBcdHRleHRNZXNzYWdlLnRleHRDb250ZW50ID0gJ09rISc7XHJcblx0XHRcdFx0Ly8gXHR0ZXh0TWVzc2FnZS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxuXHRcdFx0XHQvLyB9XHJcblx0XHRcdFx0b2suY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcblx0XHRcdFx0Y2xlYXJJbnB1dHMocXVpeklucHV0cyk7XHJcblx0XHRcdFx0c2V0VGltZW91dCgoKSA9PiB7XHJcblx0XHRcdFx0XHRpZiAodGV4dE1lc3NhZ2UpIHtcclxuXHRcdFx0XHRcdFx0dGV4dE1lc3NhZ2UuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRvay5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcclxuXHRcdFx0XHR9LCA1MDAwKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRhbGVydChcItCe0YjQuNCx0LrQsCBIVFRQOiBcIiArIHJlc3BvbnNlLnN0YXR1cyk7XHJcblx0XHRcdFx0aWYgKHRleHRNZXNzYWdlKSB7XHJcblx0XHRcdFx0XHR0ZXh0TWVzc2FnZS50ZXh0Q29udGVudCA9ICfQp9GC0L4t0YLQviDQv9C+0YjQu9C+INC90LUg0YLQsNC6Li4uJztcclxuXHRcdFx0XHRcdHRleHRNZXNzYWdlLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRzZXRUaW1lb3V0KCgpID0+IHtcclxuXHRcdFx0XHRcdGlmICh0ZXh0TWVzc2FnZSkge1xyXG5cdFx0XHRcdFx0XHR0ZXh0TWVzc2FnZS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9LCA1MDAwKTtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHRcdC8vIHF1aXpEYXRhKCcuLi9zZW5kbWFpbC5waHAnLCBxdWl6Rm9ybURhdGEpO1xyXG5cdFx0cXVpekRhdGEoJy4uL3NlcnZlci5waHAnLCBxdWl6Rm9ybURhdGEpIC8vISDRg9Cx0YDQsNGC0YwgKNGN0YLQviDQtNC70Y8g0L/RgNC+0LLQtdGA0LrQuCDQvdCwINGB0LXRgNCy0LXRgNC1KVxyXG5cclxuXHR9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFkZFRvU2VuZChmb3JtLCBvYmopIHtcclxuXHRsZXQgdmFsdWVTdHJpbmcgPSAnJztcclxuXHRsZXQgaW5wdXRzID0gZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCdpbnB1dCcpO1xyXG5cdGxldCB0ZXh0YXJlYSA9IGZvcm0ucXVlcnlTZWxlY3RvckFsbCgndGV4dGFyZWEnKTtcclxuXHRpZiAoaW5wdXRzLmxlbmd0aCA+IDApIHtcclxuXHRcdGZvciAobGV0IGkgPSAwOyBpIDwgaW5wdXRzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdGxldCBmaWVsZCA9IGlucHV0c1tpXTtcclxuXHRcdFx0aWYgKGZpZWxkLnR5cGUgIT0gJ2NoZWNrYm94JyAmJiBmaWVsZC50eXBlICE9ICdyYWRpbycgJiYgZmllbGQudmFsdWUpIHtcclxuXHRcdFx0XHRvYmpbZmllbGQubmFtZV0gPSBmaWVsZC52YWx1ZTtcclxuXHRcdFx0fSBlbHNlIGlmIChmaWVsZC50eXBlID09ICdyYWRpbycgJiYgZmllbGQuY2hlY2tlZCkge1xyXG5cdFx0XHRcdG9ialtmaWVsZC5uYW1lXSA9IGZpZWxkLnZhbHVlO1xyXG5cdFx0XHR9IGVsc2UgaWYgKGZpZWxkLnR5cGUgPT0gJ2NoZWNrYm94JyAmJiBmaWVsZC5jaGVja2VkKSB7XHJcblx0XHRcdFx0dmFsdWVTdHJpbmcgKz0gZmllbGQudmFsdWUgKyAnLCc7XHRcdFxyXG5cdFx0XHRcdG9ialtmaWVsZC5uYW1lXSA9IHZhbHVlU3RyaW5nO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fSBlbHNlIGlmICh0ZXh0YXJlYS5sZW5ndGggPiAwKSB7XHJcblx0XHRmb3IgKGxldCBpID0gMDsgaSA8IHRleHRhcmVhLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdGxldCB0ZXh0ID0gdGV4dGFyZWFbaV07XHJcblx0XHRcdGlmICh0ZXh0LnZhbHVlKSB7XHJcblx0XHRcdFx0b2JqW3RleHQubmFtZV0gPSB0ZXh0LnZhbHVlO1x0XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn0iLCJjb25zdCByYW5nZVNsaWRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyYW5nZS1zbGlkZXInKTtcblxuaWYgKHJhbmdlU2xpZGVyKSB7XG5cdG5vVWlTbGlkZXIuY3JlYXRlKHJhbmdlU2xpZGVyLCB7XG5cdHN0YXJ0OiBbNTAwLCA5OTk5OTldLFxuXHRcdGNvbm5lY3Q6IHRydWUsXG5cdFx0c3RlcDogMSxcblx0cmFuZ2U6IHtcblx0XHRcdCdtaW4nOiBbNTAwXSxcblx0XHRcdCdtYXgnOiBbOTk5OTk5XVxuXHR9XG5cdH0pO1xuXG5cdGNvbnN0IGlucHV0MCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbnB1dC0wJyk7XG5cdGNvbnN0IGlucHV0MSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbnB1dC0xJyk7XG5cdGNvbnN0IGlucHV0cyA9IFtpbnB1dDAsIGlucHV0MV07XG5cblx0cmFuZ2VTbGlkZXIubm9VaVNsaWRlci5vbigndXBkYXRlJywgZnVuY3Rpb24odmFsdWVzLCBoYW5kbGUpe1xuXHRcdGlucHV0c1toYW5kbGVdLnZhbHVlID0gTWF0aC5yb3VuZCh2YWx1ZXNbaGFuZGxlXSk7XG5cdH0pO1xuXG5cdGNvbnN0IHNldFJhbmdlU2xpZGVyID0gKGksIHZhbHVlKSA9PiB7XG5cdFx0bGV0IGFyciA9IFtudWxsLCBudWxsXTtcblx0XHRhcnJbaV0gPSB2YWx1ZTtcblx0XHRyYW5nZVNsaWRlci5ub1VpU2xpZGVyLnNldChhcnIpO1xuXHR9O1xuXG5cdGlucHV0cy5mb3JFYWNoKChlbCwgaW5kZXgpID0+IHtcblx0XHRlbC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoZSkgPT4ge1xuXHRcdFx0c2V0UmFuZ2VTbGlkZXIoaW5kZXgsIGUuY3VycmVudFRhcmdldC52YWx1ZSk7XG5cdFx0fSk7XG5cdH0pO1xufSIsImxldCB0ZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jYXRhbG9nLXNpemVzIHRkJyk7XHJcblxyXG50ZC5mb3JFYWNoKGl0ZW0gPT4ge1xyXG5cdGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xyXG5cdFx0bGV0IHNlbGYgPSBlLmN1cnJlbnRUYXJnZXQ7XHJcblx0XHRpdGVtLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcjZGJiYmE5JztcclxuXHRcdHRkLmZvckVhY2goYnRuID0+IHtcclxuXHRcdFx0aWYgKGJ0biAhPT0gc2VsZikge1xyXG5cdFx0XHRcdGJ0bi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAndHJhbnNwYXJlbnQnO1xyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHR9KTtcclxufSk7IiwiLy8qINCS0LDQu9C40LTQsNGG0LjRjyDRhNC+0YDQvNGLICjQtdGB0LvQuCDRh9C10LrQsdC+0LrRgdGLINC4INC40L3Qv9GD0YLRiyDQsiDQvtC00L3QvtC5INGE0L7RgNC80LUpXHJcbmZ1bmN0aW9uIHZhbGlkQ2hlY2soZm9ybSkge1xyXG5cdGxldCBlbGVtZW50cyA9IGZvcm0ucXVlcnlTZWxlY3RvckFsbCgnaW5wdXQnKTtcclxuXHRsZXQgaXNWYWxpZCA9IGZhbHNlO1xyXG5cdGlmIChlbGVtZW50cy5sZW5ndGggPiAwKSB7XHJcblx0XHRmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgZWxlbWVudHMubGVuZ3RoOyBpbmRleCsrKSB7XHJcblx0XHRcdGxldCBpbnB1dCA9IGVsZW1lbnRzW2luZGV4XTtcclxuXHRcdFx0aWYgKCFpbnB1dC5jbGFzc0xpc3QuY29udGFpbnMoJ25vdC12YWxpZCcpICYmIGlucHV0LmdldEF0dHJpYnV0ZShcInR5cGVcIikgPT09IFwiY2hlY2tib3hcIiB8fCBpbnB1dC5nZXRBdHRyaWJ1dGUoXCJ0eXBlXCIpID09PSBcInJhZGlvXCIpIHtcclxuXHRcdFx0XHRcdGlmIChpbnB1dC5jaGVja2VkKSB7XHJcblx0XHRcdFx0XHRcdGlzVmFsaWQgPSB0cnVlO1xyXG5cdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0Zm9ybUFkZEVycm9yKGlucHV0KTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0fSBlbHNlIHtpc1ZhbGlkID0gdHJ1ZTt9XHJcblx0XHR9XHJcblx0fSBlbHNlIHtpc1ZhbGlkID0gdHJ1ZTt9XHJcblxyXG5cdHJldHVybiBpc1ZhbGlkO1xyXG59XHJcbmZ1bmN0aW9uIHZhbGlkSW5wdXQoZm9ybSkge1xyXG5cdGxldCBlbGVtZW50cyA9IGZvcm0ucXVlcnlTZWxlY3RvckFsbCgnaW5wdXQnKTtcclxuXHRsZXQgZXJyb3IgPSAwO1xyXG5cdGlmIChlbGVtZW50cy5sZW5ndGggPiAwKSB7XHJcblx0XHRmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgZWxlbWVudHMubGVuZ3RoOyBpbmRleCsrKSB7XHJcblx0XHRcdGxldCBpbnB1dCA9IGVsZW1lbnRzW2luZGV4XTtcclxuXHRcdFx0bGV0IHBsYWNlaG9sZGVyID0gaW5wdXQuZ2V0QXR0cmlidXRlKCdwbGFjZWhvbGRlcicpO1xyXG5cdFx0XHRpZiAoIWlucHV0LmNsYXNzTGlzdC5jb250YWlucygnbm90LXZhbGlkJykpIHtcclxuXHRcdFx0XHRpZiAoaW5wdXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdlbWFpbCcpKSB7XHJcblx0XHRcdFx0XHRpZiAoZW1haWxUZXN0KGlucHV0KSB8fCBpbnB1dC52YWx1ZSA9PSBwbGFjZWhvbGRlcikge1xyXG5cdFx0XHRcdFx0XHRmb3JtQWRkRXJyb3IoaW5wdXQpO1xyXG5cdFx0XHRcdFx0XHRlcnJvcisrO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRpZiAoaW5wdXQudmFsdWUgPT0gJycgfHwgaW5wdXQudmFsdWUgPT0gcGxhY2Vob2xkZXIpIHtcclxuXHRcdFx0XHRcdFx0Zm9ybUFkZEVycm9yKGlucHV0KTtcclxuXHRcdFx0XHRcdFx0ZXJyb3IrKztcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHJldHVybiBlcnJvcjtcclxufVxyXG5cclxuZnVuY3Rpb24gZm9ybUFkZEVycm9yKGl0ZW0pIHtcclxuXHRpdGVtLnBhcmVudEVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnZXJyb3InKTtcclxuXHRpdGVtLmNsYXNzTGlzdC5hZGQoJ2Vycm9yJyk7XHJcblxyXG5cdGlmIChpdGVtLmNsb3Nlc3QoJy5xdWl6LWZvcm0nKSkge1xyXG5cdFx0bGV0IHF1aXpFcnJvciA9IGl0ZW0uY2xvc2VzdCgnLnF1aXotYmxvY2snKS5xdWVyeVNlbGVjdG9yKCcucXVpei1tZXNzYWdlJyk7XHJcblx0XHRpZiAocXVpekVycm9yKSB7XHJcblx0XHRcdHF1aXpFcnJvci5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxuXHRcdH1cclxuXHR9IGVsc2Uge1xyXG5cdFx0bGV0IGZvcm1FcnJvciA9IGl0ZW0ucGFyZW50RWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZm9ybS1tZXNzYWdlJyk7XHJcblx0XHRpZiAoZm9ybUVycm9yKSB7XHJcblx0XHRcdGZvcm1FcnJvci5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGZvcm1SZW1vdmVFcnJvcihmb3JtKSB7XHJcblx0bGV0IGlucHV0cyA9IGZvcm0ucXVlcnlTZWxlY3RvckFsbCgnaW5wdXQsIHRleHRhcmVhJyk7XHJcblx0aWYgKGlucHV0cy5sZW5ndGggPiAwKSB7XHJcblx0XHRmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgaW5wdXRzLmxlbmd0aDsgaW5kZXgrKykge1xyXG5cdFx0XHRsZXQgaW5wdXQgPSBpbnB1dHNbaW5kZXhdO1xyXG5cdFx0XHRpZiAoIWlucHV0LmNsYXNzTGlzdC5jb250YWlucygnbm90LXZhbGlkJykpIHtcclxuXHRcdFx0XHRpbnB1dC5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2Vycm9yJyk7XHJcblx0XHRcdFx0aW5wdXQuY2xhc3NMaXN0LnJlbW92ZSgnZXJyb3InKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxuXHRcclxuXHRsZXQgZm9ybUVycm9yID0gZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCcuZm9ybS1tZXNzYWdlJyk7XHJcblx0aWYgKGZvcm1FcnJvci5sZW5ndGggPiAwKSB7XHJcblx0XHRmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgZm9ybUVycm9yLmxlbmd0aDsgaW5kZXgrKykge1xyXG5cdFx0XHRjb25zdCBlcnJvciA9IGZvcm1FcnJvcltpbmRleF07XHJcblx0XHRcdGVycm9yLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuZnVuY3Rpb24gZW1haWxUZXN0KHNlbGVjdG9yKSB7XHJcblx0cmV0dXJuICEvXlxcdysoW1xcLi1dP1xcdyspKkBcXHcrKFtcXC4tXT9cXHcrKSooXFwuXFx3ezIsOH0pKyQvLnRlc3Qoc2VsZWN0b3IudmFsdWUpO1xyXG59XHJcblxyXG5jb25zdCB0ZXh0SW5wdXRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNoZWNrJyk7ICAgXHJcbnRleHRJbnB1dHMuZm9yRWFjaChpbnB1dCA9PiB7XHJcblx0aW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5cHJlc3MnLCBmdW5jdGlvbihlKSB7XHJcblx0XHRpZiAoZS5rZXkubWF0Y2goL1te0LAt0Y/RkSAwLTldL2lnKSkge1xyXG5cdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHR9XHJcblx0fSk7XHJcblx0aW5wdXQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCBmdW5jdGlvbigpIHtcclxuXHRcdHRoaXMudmFsdWU9dGhpcy52YWx1ZS5yZXBsYWNlKC9bXlxc0LAt0Y/RkSAwLTldL2lnLFwiXCIpO1xyXG5cdH0pO1xyXG59KTsiXX0=
